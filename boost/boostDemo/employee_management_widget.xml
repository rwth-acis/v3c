<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    
    <ModulePrefs title="Business Employees"
		description="Manage your employees and assign learning goals to them."
		author="Team Boost"
		author_email="henm1314g3@dbis.rwth-aachen.de"
		height="400">
  	<Require feature="opensocial-0.8" />
    <Require feature="openapp" />
    <OAuth>
		<Service name="openapp"                     
		    xmlns:openapp="http://www.role-project.eu/xml/openapp/opensocialext/" 
		    openapp:service="http://purl.org/role/terms/spaceService"
		    openapp:permitReadAppend="http://purl.org/role/terms/data">
			
		    <Request method="" url=""/>
			<Authorization url=""/>
			<Access method="" url=""/>
		</Service>
    </OAuth>
    </ModulePrefs>
    
    <Content type="html">
    <![CDATA[
		
		<!-- We use jQuery to manipulate DOM and Bootstrap for the interface. -->
    	<script src="http://virtus-vet.eu/boost/boostDemo/js/jquery-1.10.2.min.js" type="text/javascript"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/bootstrap.min.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/bootstrap-slider.js"></script>
		<script src="http://dbis.rwth-aachen.de/gadgets/iwc/lib/iwc.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/ladda/spin.min.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/ladda/ladda.min.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/Ractive.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/bootbox.min.js"></script>

		
		
						
		<!-- Managers for BCN and Employee related stuff -->
		<script src="http://virtus-vet.eu/boost/boostDemo/js/async.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/boostShared.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/BCNManager.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/EmployeeManager.js"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/AccessRightsManager.js" type="text/javascript"></script>
		<script src="http://virtus-vet.eu/boost/boostDemo/js/UserManager.js"></script>


		<!-- Define CSS -->
		<link rel="stylesheet" href="http://virtus-vet.eu/boost/boostDemo/css/bootstrap.min.css">
		<link rel="stylesheet" href="http://virtus-vet.eu/boost/boostDemo/css/slider.css">
		<link rel="stylesheet" href="http://virtus-vet.eu/boost/boostDemo/ladda/ladda-themeless.min.css">
		<link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">

		<!-- JavaScript Block -->
		<script>
			
			var space;
			var employeeList;
			var bcnList;
			var iwcClient;
			var userAccessRights;
			var userList;

			//Define the ractives as globals
			var ractiveOverview;
			var ractiveEditEmployee;
			var ractiveAddEmployee;
			var ractiveDeleteEmployee;
			var ractiveSetLIEmployee;
			
			gadgets.util.registerOnLoadHandler(init);
			
			function init(){
				space = new openapp.oo.Resource(openapp.param.space());

				iwcClient = new iwc.Client();
				iwcClient.connect(iwcCallback);
			}

			function iwcCallback(intent){
				if((intent.action == "BCN_CREATE") || (intent.action == "BCN_UPDATE")){
					$('#setLIModal').modal("hide");

					var message = "<div>Please wait while the employees are updated to reflect these changes.</div>"
					message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://virtus-vet.eu/boost/boostDemo/resources/loader.gif'></center></div>";
					bootbox.dialog({
						title : "<span style='margin-right:5px;' class='glyphicon glyphicon-refresh'></span>Goals have changed.",
						message : message,
						closeButton : false
					});
					createBCNfromUri(intent.data, function(bcn){
						if(intent.action == "BCN_CREATE"){
							//Add the new BCN to the local list
							bcnList.push(bcn);
						}
						else{
							//Replace the BCN in the local list with the updated one
							for(var i = 0; i < bcnList.length; i++){
								if(bcn.uri == bcnList[i].uri)
									bcnList[i] = bcn;
							}
							ractiveOverview.update();
						}
						sortBcns(bcnList);

						//Update all local employee objects
						for(var i = 0; i < employeeList.length; i++){
							ensureEmplyoeeBCNConsistency(employeeList[i], [bcn], []);
						}
						bootbox.hideAll();
					});
				}

				if(intent.action == "BCN_DELETE"){
					$('#setLIModal').modal("hide");
					var message = "<div>Please wait while the employees are updated to reflect these changes.</div>"
					message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://virtus-vet.eu/boost/boostDemo/resources/loader.gif'></center></div>";
					bootbox.dialog({
						title : "<span style='margin-right:5px;' class='glyphicon glyphicon-refresh'></span>Goals have changed.",
						message : message,
						closeButton : false
					});

					//Find the deleted BCN in the list via its URI and remove it
					var bcnToRemove = null;
					for(var i = 0; i < bcnList.length; i++){
						if(bcnList[i].uri == intent.data){
							bcnToRemove = bcnList[i];
							bcnList.splice(i, 1);
						}
					}

					//Remove BCN data from the employees
					for(var i = 0; i < employeeList.length; i++){
						ensureEmplyoeeBCNConsistency(employeeList[i], [], [bcnToRemove]);
					}

					bootbox.hideAll();
				}

				if(intent.action=="ACCESS_RIGHTS_CHANGED"){
					retrieveAccessRights(function(accessRights){

					userAccessRights = accessRights.getUserAccessRights();

						retrieveAllEmployees(space, function(employees){
							employeeList = []

							// Filter out all the employees for which the user is not
							// set as an employee
							if((userAccessRights.isManager || userAccessRights.isTrainer)){
								for(var i = 0; i < employees.length; i++){
									var employee = employees[i];
									access = accessRights.getUserAccessRights(employee.userUri)

									if(access.isEmployee)
										employeeList.push(employee);
								}
							}
							else if(userAccessRights.isEmployee){
								for(var i = 0; i < employees.length; i++){
									var employee = employees[i];
									if(openapp.param.user() == employee.userUri)
										employeeList.push(employee)
								}
							}

							sortEmployees();

							ractiveOverview.set("employeeList", employeeList);
						});
					});
				}
			}

			function publishEmployeeCreated(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_CREATE"
				};

				iwcClient.publish(intent);
			}

			function publishEmployeeUpdated(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_UPDATE"
				};

				iwcClient.publish(intent);
			}

			function publishEmployeeDeleted(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_DELETE"
				};

				iwcClient.publish(intent);
			}

			function publishShowEmployeeProgress(uri){
				var intent = {
					component: "",
					data: uri,
					dataType: "text/json",
					action: "SHOW_EMPLOYEE_PROGRESS"
				};

				iwcClient.publish(intent);
			}

			function publishShowOverallEmployeeProgress(){
				var intent = {
					component: "",
					data: "",
					dataType: "text/json",
					action: "SHOW_OVERALL_EMPLOYEE_PROGRESS"
				};

				iwcClient.publish(intent);
			}

			$(function(){

				// Get the access rights: 
				retrieveAccessRights(function(accessRights){
				userAccessRights = accessRights.getUserAccessRights();
					
					//Check if user has agreed to license
	
					if(!userAccessRights.hasAgreedToLicense){
						showModalAcceptTermsOfUse();							
					} else if (!userAccessRights.isManager && !userAccessRights.isTrainer && !userAccessRights.isEmployee) {
						showModalContactManager();		
					}

					});  // end of the retrieveAccessRights
				
			
				var message = "<div>Please wait.</div>"
				message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://virtus-vet.eu/boost/boostDemo/resources/loader.gif'></center></div>";

				// Get the access rights: 
				retrieveAccessRights(function(accessRights){

					userAccessRights = accessRights.getUserAccessRights();

					//	addEmployee and showProgress activities	
					var ractiveEmployeeHeader = new Ractive({
					  el: 'containerEmployeeOverview',
					  template: '#templateEmployeeHeader',
					  data: {
					  	accessRights: userAccessRights
					  },
					  append: true
					});

				retrieveAllEmployees(space, function(employees){
					employeeList = []

					// Filter out all the employees for which the user is not
					// set as an employee
					if((userAccessRights.isManager || userAccessRights.isTrainer)){
						for(var i = 0; i < employees.length; i++){
							var employee = employees[i];
							access = accessRights.getUserAccessRights(employee.userUri)

							if(access.isEmployee)
								employeeList.push(employee);
						}
					}
					else if(userAccessRights.isEmployee){
						for(var i = 0; i < employees.length; i++){
							var employee = employees[i];
							if(openapp.param.user() == employee.userUri)
								employeeList.push(employee)
						}
					}

					sortEmployees();
					retrieveAllBcns(space, function(bcns){
						bcnList = bcns;
						sortBcns(bcnList);

						ractiveEmployeeHeader.on({
						showOverallProgress: function ( event ) {
							publishShowOverallEmployeeProgress();
						},
						addNewEmployee: function ( event ) {
					
							var employee = new Employee({});
							ractiveAddEmployee.set("employee", employee);
							ractiveAddEmployee.set("nameError", false);
							ractiveAddEmployee.set("emailError", false);
							$("#addEmployeeModal").modal();
						},

						showHelpAddEmployee: function( event ){
							$('.tooltip-addEmployee').tooltip();
							
						},
						showHelpShowOverallProgress: function (event){
							$('.tooltip-showOverallProgress').tooltip();
						},
						showHelpForHelp: function (event){
							$('.tooltip-showHelp').tooltip();
						},
						showHelp: function(event){
							$('#descriptionModal').modal({
								keyboard: true
							});

						}
						});
						
						// Overview ractive which is responsible to render the overview list of all employees
						ractiveOverview = new Ractive({
						    el: 'containerEmployeeOverview',
						    template: '#templateEmployeeOverview',
						    data: { "employeeList" : employeeList,
						    		"accessRights" : userAccessRights
						 			},
						    append: true
						});

						ractiveOverview.on({
							edit: function ( event ) {
							//We are editing a cloned employee object
							//If the user discards the changes we do not have to do anything.
							//If the user saves the changes we just replace the original employee with the clone
							ractiveEditEmployee.set("employee", event.context.clone());
							ractiveEditEmployee.set("originalEmployee", event.context);
							ractiveEditEmployee.set("nameError", false);
							ractiveEditEmployee.set("emailError", false);
							$('#updateEmployeeModal').modal();
						},
							delete: function ( event ) {
							ractiveDeleteEmployee.set("employee", event.context);
							$('#deleteEmployeeModal').modal();
						},
							graphShow: function(event){
							publishShowEmployeeProgress(event.context.uri);
						},
							setLI: function ( event ) {
							//We are editing a cloned employee object
							//If the user discards the changes we do not have to do anything.
							//If the user saves the changes we just replace the original employee with the clone
							var clone = event.context.clone();
							bindEmployeeToBCNs(clone);
							ractiveSetLIEmployee.set("bcnList", bcnList);
							ractiveSetLIEmployee.set("employee", clone);
							ractiveSetLIEmployee.set("originalEmployee", event.context);
							$('#setLIModal').modal();
						},	
							showHelpEmployeeGraph: function ( event ) {
							$('.tooltip-showEmployeeProgress').tooltip();
						},
							showHelpEditEmployee: function ( event ) {
							$('.tooltip-editEmployee').tooltip();
						},
							showHelpSetLI: function ( event ) {
							$('.tooltip-setLI').tooltip();
						},
							showHelpDeleteEmployee: function ( event ) {
							$('.tooltip-deleteEmployee').tooltip();	
						},
							showHelpEmailEmployee: function ( event ) {
							$('.tooltip-emailEmployee').tooltip();
						},
							showHelpOptions: function ( event ) {
							$('.tooltip-showOptions').tooltip();	
						}
						});

						//Edit employee ractive which is responsible to render the modal to edit an employee
						ractiveEditEmployee = new Ractive({
							el: 'containerEmployeeEdit',
						    template: '#employeeTemplate',
						    data: { "employee" : null,
						    		"originalEmployee" : null,
						    		"nameError" : false,
						    		"emailError" : false
						    	  },
						    append: true
						});

						ractiveEditEmployee.on("saveEmployee", function (event) {
							var employee = this.get("employee");
							if(!checkInputEmployee(employee, this))
								return;
							var originalEmployee = this.get("originalEmployee");
							var buttonElement = event.node;
							//Show the loading indicator of the save button
							var l = Ladda.create(buttonElement);
							l.start();
							employee.update(function(){
								publishEmployeeUpdated(employee.uri);
								//Replace the old employee in the array with the modified one
								employeeList[employeeList.indexOf(originalEmployee)] = employee;

								//Tell the overview ractive that the employee was updated
								ractiveOverview.update();

								sortEmployees();

								//Hide the loading indicator of the save button
								l.stop();
								$("#updateEmployeeModal").modal("hide");
							});

						});
			

						//Add employee ractive which is responsible to render the modal to add a new employee
						ractiveAddEmployee = new Ractive({
							el: 'containerEmployeeAdd',
						    template: '#employeeTemplate',
						    data: { "employee" : null,
						    		"nameError" : false,
						    		"emailError" : false
						    	  },
						    append: true
						});

						ractiveAddEmployee.on("saveEmployee", function (event) {
							var employee = this.get("employee");
							if(!checkInputEmployee(employee, this))
								return;

							var buttonElement = event.node;
							//Show the loading indicator of the save button
							var l = Ladda.create(buttonElement);
							l.start();
							ensureEmplyoeeBCNConsistency(employee, bcnList, []);
							employee.create(function(){
								employeeList.push(employee);
								sortEmployees();

								publishEmployeeCreated(employee.uri);
								//Hide the loading indicator of the save button
								l.stop();
								$("#addEmployeeModal").modal("hide");
							});
						});

						//Delete employee ractive which is responsible to render the modal used to delete an employee
						ractiveDeleteEmployee = new Ractive({
							el: 'containerEmployeeDelete',
						    template: '#deleteEmployeeTemplate',
						  	data: {
						  		employee : null
						  	},
						    append: true
						});

						ractiveDeleteEmployee.on("deleteEmployee", function(event){
							var employee = this.get("employee");
							var buttonElement = event.node;
							//Show the loading indicator of the delete button
							var l = Ladda.create(buttonElement);
							l.start();
							employee.delete(function(){
								employeeList.splice(employeeList.indexOf(employee), 1);
								//TODO: Sort the array by employee name

								publishEmployeeDeleted(employee.uri);
								//Hide the loading indicator of the delete button
								l.stop();
								$("#deleteEmployeeModal").modal("hide");
							});
						});

						//Ractive which is responsible to render the modal where the user can set the learning levels
						//for an employee
						ractiveSetLIEmployee = new Ractive({
							el: 'containerEmployeeSetLI',
						    template: '#setLITemplate',
						    data: 	{ 	"bcnList" : null, 
										"learningLevels" : llevel,
										"employee" : null,
										"originalEmployee" : null
								 	},
			
						    append: true
						});

						ractiveSetLIEmployee.on("saveSetLI", function(event){
							var employee = this.get("employee");
							var originalEmployee = this.get("originalEmployee");
							var buttonElement = event.node;
							//Show the loading indicator of the save button
							var l = Ladda.create(buttonElement);
							l.start();
							employee.update(function(){
								publishEmployeeUpdated(employee.uri);

								//Replace the old employee in the array with the modified one
								employeeList[employeeList.indexOf(originalEmployee)] = employee;

								//Tell the overview ractive that the employee was updated
								ractiveOverview.update();

								//Hide the loading indicator of the save button
								l.stop();
								$('#setLIModal').modal("hide");
							});
						});

						$("#loadingEmployeeText").addClass("hidden");
					});
				});
			});  // end of the retrieveAccessRights

			});

			function bindEmployeeToBCNs(employee){
				for(var i=0; i < bcnList.length; i++){
					var bcn = bcnList[i];
					bcn.employeeBcnData = employee.learningLevels[bcn.uri];
					for(var j = 0; j < bcn.learningIndicators.length; j++){
						var li = bcn.learningIndicators[j];
						li.employeeLiData = employee.learningLevels[bcn.uri][li.id];
					}
				}
			}

			function sortEmployees(){
				employeeList.sort(function (a, b){
					if(a.name.toLowerCase() < b.name.toLowerCase()) 
						return -1; else return 1;
				});
			}

			function checkInputEmployee(employee, ractive)
			{
				var nameError = (employee.name == "");
				ractive.set("nameError", nameError);

				var emailError = false;
				var email = employee.email;	

				var atpos = email.indexOf("@");
				var dotpos = email.lastIndexOf(".");

				if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= email.length)
  				{
  					emailError = true;
  				}

  				ractive.set("emailError", emailError);

  				return !(nameError || emailError);
			}

		</script>

		<!-- HTML Block -->
		
		<div style="overflow-y: scroll; height:400px;">
		<div class="panel panel-primary" id="containerEmployeeOverview">
		<!-- Template for the header Main widget view -->
			<script id='templateEmployeeHeader' type='text/ractive'>	
			
			<div class="panel-heading">
				     <button type="button" class="btn btn-default launch-modal" on-mouseover="showHelpForHelp" on-click="showHelp" style="float:right; margin:-5 5 10 5px; color:#428BCA;"><span  class="glyphicon glyphicon-question-sign tooltip-showHelp" data-placement="left" data-toggle="tooltip" data-original-title="Show Help"></span></button>
					<h3 class="panel-title">
					<span class="glyphicon glyphicon-user" style="margin-right:5px;"></span>Business employees
				</h3>
		  	</div>
		  	
			<div id='panel' class="panel-body" style="padding: 5 5 5 5;">
			<!-- add new bcn and view overall progress -->

					{{#accessRights.isTrainer}}
			  		 	{{^accessRights.isManager}}
			  		 		<button  type="button" class="btn btn-primary pull-left" on-mouseover="showHelpShowOverallProgress" on-click="showOverallProgress"><span class="glyphicon glyphicon-stats tooltip-showOverallProgress" data-placement="top" data-toggle="tooltip" data-original-title="Overall Employee View"></span></button>
			  		 	{{/accessRights.isManager}}
			  		{{/accessRights.isTrainer}}

					{{#accessRights.isManager}}
		  				<div class="btn-group">
			 	 			<button  type="button" class="btn btn-primary pull-right" on-mouseover="showHelpShowOverallProgress" on-click="showOverallProgress"><span class="glyphicon glyphicon-stats tooltip-showOverallProgress" data-placement="top" data-toggle="tooltip" data-original-title="Overall Employee View"></span></button>		
						</div>
					{{/accessRights.isManager}}

				<div id="loadingEmployeeText" class="text-muted small" style="margin-top:5px;">
					Loading employee data ...
					<img style='margin-left:5px; height:15px;' src='http://virtus-vet.eu/boost/boostDemo/resources/loader.gif'>
				</div>
			</div>
			</script>	
		</div>
		</div>

		<script id="templateEmployeeOverview" type='text/ractive'>
			<table class="table table-striped table-bordered table-condensed" >
			    <tbody>
					{{#employeeList}}
						<tr> 
							<td>
								<div>
									{{name}}
								</div>
								<div class="small text-muted">
									{{email}}
								</div>
							</td>
							<td style="width:70px;" align="center">
						
						{{#accessRights.isManager}} 
								<div class='btn-group'>
									<button type="button" class="btn btn-default dropdown-toggle"  on-mouseover="showHelpOptions"  data-toggle="dropdown">
										<i class="fa fa-cogs tooltip-showOptions" data-placement="left" data-toggle="tooltip" data-original-title="Show Options"></i><span class="caret"></span>
									</button>
									<ul class="dropdown-menu pull-right" role="menu" align="left">
										<li style="width:200px;" align="center">
											<div class="btn-group">	
												<button class="btn btn-default btn-sm"  on-mouseover="showHelpSetLI" on-click='setLI'><span class='glyphicon glyphicon-flag tooltip-setLI' data-placement="left" data-toggle="tooltip" data-original-title="Assign goals: {{name}}" style="margin-right:5px;"></span></button>
												<button class="btn btn-default btn-sm"  on-mouseover="showHelpEmailEmployee"><a href='mailto:{{email}}'><span class='glyphicon glyphicon-envelope tooltip-emailEmployee' data-placement="left" data-toggle="tooltip" data-original-title="Send email: {{name}}" style="margin-right:5px; color:#000;"></span></a></button>
												<button class="btn btn-default btn-sm" on-mouseover="showHelpEmployeeGraph" on-click='graphShow'><span class='glyphicon glyphicon-stats tooltip-showEmployeeProgress' data-placement="left" data-toggle="tooltip" data-original-title="Show Progress: {{name}}" style="margin-right:5px;"></span></button>	
											</div>
										</li>
									</ul>
								</div>						
						{{/accessRights.isManager}}

						{{#accessRights.isEmployee}}
							{{^accessRights.isManager}}
								{{^accessRights.isTrainer}}
												<button class="btn btn-default btn-lg" on-mouseover="showHelpEmployeeGraph" on-click='graphShow'><span class='glyphicon glyphicon-stats tooltip-showEmployeeProgress' data-placement="left" data-toggle="tooltip" data-original-title="Show Progress: {{name}}" style="margin-right:5px;"></span></button>	
								{{/accessRights.isTrainer}}
							{{/accessRights.isManager}}
						{{/accessRights.isEmployee}}

						{{#accessRights.isTrainer}}
							{{^accessRights.isManager}}
									<div class='btn-group'>
									<button type="button" class="btn btn-default dropdown-toggle"  on-mouseover="showHelpOptions"  data-toggle="dropdown">
										<i class="fa fa-cogs tooltip-showOptions" data-placement="left" data-toggle="tooltip" data-original-title="Show Options"></i><span class="caret"></span>
									</button>
									<ul class="dropdown-menu pull-right" role="menu">
										<li style="width:115px;" align="center">
											<div class="btn-group">	
												<button class="btn btn-default btn-sm"  on-mouseover="showHelpSetLI" on-click='setLI'><span class='glyphicon glyphicon-flag tooltip-setLI' data-placement="left" data-toggle="tooltip" data-original-title="Assign goals: {{name}}" ></span></button>
												<button class="btn btn-default btn-sm"  on-mouseover="showHelpEmailEmployee"><a href='mailto:{{email}}'><span class='glyphicon glyphicon-envelope tooltip-emailEmployee' data-placement="left" data-toggle="tooltip" data-original-title="Send email: {{name}}" ></span></a></button>
												<button class="btn btn-default btn-sm" on-mouseover="showHelpEmployeeGraph" on-click='graphShow'><span class='glyphicon glyphicon-stats tooltip-showEmployeeProgress' data-placement="left" data-toggle="tooltip" data-original-title="Show Progress: {{name}}" ></span></button>	
											</div>
										</li>
									</ul>
								</div>
							{{/accessRights.isManager}}
						{{/accessRights.isTrainer}}
	 
							</td>
						</tr>
					{{/employeeList}}
			    </tbody>
			</table>
		</script>

		<script id="employeeTemplate" type="text/ractive">
			<div class="modal-body">
				<form role="form">
					<div class="form-group {{ nameError ? "has-error" : "" }}">
						<label for="inputNewEmployeeName" class="control-label">Name</label>
						<input value='{{employee.name}}' type="text" class="form-control" id="inputNewEmployeeName" placeholder="Enter name">
						{{#nameError}}
						<span class="help-block"><h6>Name must not be empty.</h6></span>
						{{/nameError}}
					</div>
					<div class="form-group {{ emailError ? "has-error" : "" }}">
						<label for="inputNewEmployeeEmail" class="control-label">Email</label>
						<input value='{{employee.email}}' type="text" class="form-control" id="inputNewEmployeeEmail" placeholder="Enter email">
						{{#emailError}}
						<span class="help-block"><h6>Please enter a valid email adress.</h6></span>
						{{/emailError}}
					</div>
				</form>
			</div>

			<div class="modal-footer">
	        	<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
	        	<button class="btn btn-primary ladda-button" data-style="zoom-out" on-click="saveEmployee"><span class="ladda-label">Save</span></button>
			</div>
  		</script>
				
		<div class="modal fade" id="updateEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content" id="containerEmployeeEdit">
  					<div class="modal-header">
    					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    					<h4 class="modal-title" id="myModalLabel">View/Update Employee</h4>
  					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

		<div class="modal fade" id="addEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content" id="containerEmployeeAdd">
  					<div class="modal-header">
    					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    					<h4 class="modal-title" id="myModalLabel">Add new Employee</h4>
  					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

		<div class="modal fade" id="setLIModal" tabindex="-1" role="dialog" aria-labelledby="setLIModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content" id="containerEmployeeSetLI">
				</div>
			</div>
		</div>

<script id="setLITemplate" type="text/ractive">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
			<h4  class="modal-title" id='massageEmployeeSetLI'>{{employee.name}}</h4>
		</div>
		<div class="modal-body">
		<div class="panel-group" id="bcnPanel">
		{{#bcnList:num}}
			<div class="panel panel-default">
				<div class="panel-heading" style="padding-bottom:1px;">
	      			<h6 class="panel-title">
	        			<span class="glyphicon {{employeeBcnData.isRelevant ? "glyphicon-star" : "glyphicon-star-empty"}}" style="margin-right:5px;"></span> 
	        			<a data-toggle="collapse" data-parent="#bcnPanel" href="#bcn{{num}}"> {{name}}
	        				<span class="caret"></span>
	        			</a> 
	      			</h6>
	      			<div class="checkbox" style="margin-bottom:1px; margin-top:1px;"> 
						<label> 
						 	Relevant 
					 	<input type="checkbox" value="" checked='{{employeeBcnData.isRelevant}}'> 
						</label> 
					</div>
	    		</div>			
	    		<div  id="bcn{{num}}" class="panel-collapse collapse"> 
	      			<ul style="margin-bottom:0px;" class="list-group">
		      			{{#learningIndicators}}
							<li class="list-group-item">
								<h4><i class="fa {{employeeLiData.isRelevant ? "fa-flag" : "fa-flag-o"}}" style="margin-right:5px;"></i> {{name}}</h4>
								<div class="checkbox">
		  							<label>
		  								Relevant
		    							<input type="checkbox" value="" checked="{{employeeLiData.isRelevant}}">
		  					        </label>
						        </div> 
								Start level:
								<select class="form-control" disabled={{employeeLiData.isRelevant ? "" : "disabled"}} value="{{employeeLiData.start}}">
								{{#learningLevels}}
									<option value='{{.}}'>{{.}}</option>
								{{/learningLevels}}		
								</select>
								Current level:
								<select class="form-control" disabled={{employeeLiData.isRelevant ? "" : "disabled"}} value="{{employeeLiData.current}}">
								{{#learningLevels}}
									<option value='{{.}}'>{{.}}</option>
								{{/learningLevels}}		
								</select>
								End level:
								<select class="form-control" disabled={{employeeLiData.isRelevant ? "" : "disabled"}} value="{{employeeLiData.end}}">
								{{#learningLevels}}
									<option value='{{.}}'>{{.}}</option>
								{{/learningLevels}}		
								</select>
						   	</li>
						{{/learningIndicators}}
					</ul>
	    		</div>
	  		</div>
					
	{{/bcnList}}		

		</div>
	</div>
	<div class="modal-footer">
	    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
		<button class="btn btn-primary ladda-button" data-style="zoom-out"  on-click="saveSetLI"><span class="ladda-label">Save</span></button>  					
	</div>
 
</script>

<script id="deleteEmployeeTemplate" type="text/ractive">
	<div class="modal-body">
		<div class="alert alert-danger fade in" id="alertInModal">
			<h4>Do you really want to delete {{employee.name}} as an employee?</h4>
		</div>
		<div class="modal-footer">
			<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
			<button class="btn btn-danger ladda-button" data-style="zoom-out" on-click="deleteEmployee"><span class="ladda-label">Delete</span></button>				       
		</div>
	</div>
</script>

<div class="modal fade" id="deleteEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content" id="containerEmployeeDelete">
		</div>
	</div>
</div>


	<div class="modal fade" id="descriptionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    		<h4 class="modal-title">Business Employees Help</h4>
            </div>
          <div class="modal-body">
            <div class="panel-group" id="levelsdef" align="justify">
             <ul style="padding: 10px;">
			 <li>To add new business employee click on <button type="button" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-plus" data-placement="top" data-toggle="tooltip" data-original-title="Add a New Goal"></span></button> icon. In the new view enter <i>Name</i>, <i>Email</i> for your employee. Click on the <i>Save</i> button to save the changes.</li>
             <li>To see overall progress of all goals click on <button type="button" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-stats tooltip-showOverallProgress" data-placement="top" data-toggle="tooltip" data-original-title="Overall Goals View"></span></button> icon. The graph will be shown in the <i>Learning Progress</i> widget.</p></li>
             <li>To see more options click on <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><i class="fa fa-cogs tooltip-showOptions" data-placement="left" data-toggle="tooltip" data-original-title="Show Options"></i><span class="caret"></span></button> icon.</li>
             <ul style="padding: 10px;">
             <li>To edit employee click on <button class="btn btn-default btn-sm"><span class="glyphicon glyphicon-edit tooltip-editGoal" data-placement="left" data-toggle="tooltip" data-original-title="Edit"></span></button> icon.</li>
             <li>To delete employee click on <button class="btn btn-default btn-sm"><span class="glyphicon glyphicon-trash tooltip-deleteGoal" data-placement="left" data-toggle="tooltip" data-original-title="Delete"></span></button> icon.</li>
             <li>To assign goals to employee and define learning levels click on <button class="btn btn-default btn-sm"><span class="glyphicon glyphicon-flag tooltip-setLI" data-placement="left" data-toggle="tooltip" data-original-title="Assign goals" style="margin-right:5px;"></span></button> icon. 
              In the new view check in relevant goals for this employee. Check in relevant learning indicators and define learning levels for this employee by clicking on the goal name and selecting start, current and end level accordingly. 
              <br>The description of learning level as follows: 
              	<ul style="padding: 10px;">
                	<li><b>Level 0:</b> I have not started to address the skills / knowledge required for this indicator.</li> 
               	  	<li><b>Level 1:</b> I have started to try to address the skills / knowledge for this indicator but need more time / support to make progress.</li>
                	<li><b>Level 2:</b> I feel that I have acquired some skills / knowledge and am aware of the progress I have made with regards to this indicator but feel that I need to learn more before I can put into practice on the job.</li>
                	<li><b>Level 3:</b> I feel that I have acquired significant skills / knowledge for my current job role and have started   to put into practice on the job.</li>
                	<li><b>Level 4:</b> I feel that I have acquired significant knowledge of these skills for my current job role but for future development within the company, I recognise that I can develop further.</li>
               		<li><b>Level 5:</b> I feel confident enough in using these skills and knowledge so that I could support a few colleagues with regard to these?</li>
              	</ul>
              </li>
             <li>To monitor the learning progress of employee straight forward in <i>Learning Progress</i> widget click on <button class="btn btn-default btn-sm"><span class="glyphicon glyphicon-stats tooltip-showGoalProgress" data-placement="left" data-toggle="tooltip" data-original-title="Show Progress: Decor and Furnishing"></span></button> icon.</li>
             </ul>
             </ul>	
          </div>
          <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>          
          </div>      
        </div>      
      </div>
    </div>
	]]>
  </Content>
</Module>
