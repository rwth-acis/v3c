{
  "version": 3,
  "sources": [
    "../yjs/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "node_modules/after/index.js",
    "y-websockets-client.js",
    "node_modules/arraybuffer.slice/index.js",
    "node_modules/backo2/index.js",
    "node_modules/base64-arraybuffer/lib/base64-arraybuffer.js",
    "node_modules/blob/index.js",
    "node_modules/component-bind/index.js",
    "node_modules/component-emitter/index.js",
    "node_modules/component-inherit/index.js",
    "node_modules/debug/debug.js",
    "node_modules/engine.io-client/index.js",
    "node_modules/engine.io-client/lib/index.js",
    "node_modules/engine.io-client/lib/socket.js",
    "node_modules/engine.io-client/lib/transport.js",
    "node_modules/engine.io-client/lib/transports/index.js",
    "node_modules/engine.io-client/lib/transports/polling-jsonp.js",
    "node_modules/engine.io-client/lib/transports/polling-xhr.js",
    "node_modules/engine.io-client/lib/transports/polling.js",
    "node_modules/engine.io-client/lib/transports/websocket.js",
    "node_modules/engine.io-client/lib/xmlhttprequest.js",
    "node_modules/engine.io-client/node_modules/debug/browser.js",
    "node_modules/engine.io-client/node_modules/debug/debug.js",
    "node_modules/engine.io-client/node_modules/parseuri/index.js",
    "node_modules/engine.io-parser/lib/browser.js",
    "node_modules/engine.io-parser/lib/keys.js",
    "node_modules/global/index.js",
    "node_modules/has-binary/index.js",
    "node_modules/has-cors/index.js",
    "node_modules/indexof/index.js",
    "node_modules/isarray/index.js",
    "node_modules/json3/lib/json3.js",
    "node_modules/ms/index.js",
    "node_modules/object-component/index.js",
    "node_modules/parsejson/index.js",
    "node_modules/parseqs/index.js",
    "node_modules/parseuri/index.js",
    "node_modules/socket.io-client/index.js",
    "node_modules/socket.io-client/lib/index.js",
    "node_modules/socket.io-client/lib/manager.js",
    "node_modules/socket.io-client/lib/on.js",
    "node_modules/socket.io-client/lib/socket.js",
    "node_modules/socket.io-client/lib/url.js",
    "node_modules/socket.io-parser/binary.js",
    "node_modules/socket.io-parser/index.js",
    "node_modules/socket.io-parser/is-buffer.js",
    "node_modules/to-array/index.js",
    "node_modules/utf8/utf8.js",
    "node_modules/ws/lib/browser.js",
    "src/Websockets-client.js"
  ],
  "names": [
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "require",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "after",
    "count",
    "callback",
    "err_cb",
    "proxy",
    "err",
    "result",
    "bail",
    "noop",
    2,
    "arraybuffer",
    "start",
    "end",
    "bytes",
    "byteLength",
    "slice",
    "ArrayBuffer",
    "abv",
    "Uint8Array",
    "ii",
    "buffer",
    3,
    "Backoff",
    "opts",
    "this",
    "ms",
    "min",
    "max",
    "factor",
    "jitter",
    "attempts",
    "prototype",
    "duration",
    "Math",
    "pow",
    "rand",
    "random",
    "deviation",
    "floor",
    "reset",
    "setMin",
    "setMax",
    "setJitter",
    4,
    "chars",
    "encode",
    "len",
    "base64",
    "substring",
    "decode",
    "encoded1",
    "encoded2",
    "encoded3",
    "encoded4",
    "bufferLength",
    "p",
    "indexOf",
    5,
    "global",
    "mapArrayBufferViews",
    "ary",
    "chunk",
    "buf",
    "copy",
    "set",
    "byteOffset",
    "BlobBuilderConstructor",
    "options",
    "bb",
    "BlobBuilder",
    "append",
    "getBlob",
    "type",
    "BlobConstructor",
    "Blob",
    "WebKitBlobBuilder",
    "MSBlobBuilder",
    "MozBlobBuilder",
    "blobSupported",
    "size",
    "blobSupportsArrayBufferView",
    "b",
    "blobBuilderSupported",
    "self",
    "window",
    6,
    "obj",
    "fn",
    "args",
    "arguments",
    "apply",
    "concat",
    7,
    "Emitter",
    "mixin",
    "key",
    "on",
    "addEventListener",
    "event",
    "_callbacks",
    "push",
    "once",
    "off",
    "removeListener",
    "removeAllListeners",
    "removeEventListener",
    "callbacks",
    "cb",
    "splice",
    "emit",
    "listeners",
    "hasListeners",
    8,
    "constructor",
    9,
    "debug",
    "name",
    "enabled",
    "fmt",
    "coerce",
    "curr",
    "Date",
    "humanize",
    "console",
    "log",
    "Function",
    "val",
    "stack",
    "message",
    "names",
    "skips",
    "enable",
    "localStorage",
    "split",
    "replace",
    "RegExp",
    "substr",
    "disable",
    "sec",
    "hour",
    "toFixed",
    "test",
    10,
    "./lib/",
    11,
    "parser",
    "./socket",
    "engine.io-parser",
    12,
    "Socket",
    "uri",
    "parseuri",
    "host",
    "secure",
    "protocol",
    "port",
    "query",
    "location",
    "pieces",
    "hostname",
    "shift",
    "pop",
    "agent",
    "parseqs",
    "upgrade",
    "path",
    "forceJSONP",
    "jsonp",
    "forceBase64",
    "enablesXDR",
    "timestampParam",
    "timestampRequests",
    "transports",
    "readyState",
    "writeBuffer",
    "callbackBuffer",
    "policyPort",
    "rememberUpgrade",
    "binaryType",
    "onlyBinaryUpgrades",
    "pfx",
    "passphrase",
    "cert",
    "ca",
    "ciphers",
    "rejectUnauthorized",
    "open",
    "clone",
    "hasOwnProperty",
    "index",
    "parsejson",
    "priorWebsocketSuccess",
    "Transport",
    "createTransport",
    "EIO",
    "transport",
    "id",
    "sid",
    "socket",
    "setTimeout",
    "setTransport",
    "onDrain",
    "packet",
    "onPacket",
    "onError",
    "onClose",
    "probe",
    "onTransportOpen",
    "upgradeLosesBinary",
    "supportsBinary",
    "failed",
    "send",
    "data",
    "msg",
    "upgrading",
    "pause",
    "cleanup",
    "flush",
    "freezeTransport",
    "close",
    "onerror",
    "error",
    "onTransportClose",
    "onclose",
    "onupgrade",
    "to",
    "onOpen",
    "upgrades",
    "onHandshake",
    "setPing",
    "filterUpgrades",
    "pingInterval",
    "pingTimeout",
    "onHeartbeat",
    "timeout",
    "clearTimeout",
    "pingTimeoutTimer",
    "pingIntervalTimer",
    "ping",
    "sendPacket",
    "prevBufferLen",
    "writable",
    "write",
    "cleanupAndClose",
    "waitForUpgrade",
    "reason",
    "desc",
    "filteredUpgrades",
    "j",
    "./transport",
    "./transports",
    "component-emitter",
    "indexof",
    13,
    "timestamps",
    "description",
    "doOpen",
    "doClose",
    "packets",
    "onData",
    "decodePacket",
    14,
    "polling",
    "xhr",
    "xd",
    "xs",
    "isSSL",
    "xdomain",
    "xscheme",
    "XMLHttpRequest",
    "XHR",
    "JSONP",
    "websocket",
    "./polling-jsonp",
    "./polling-xhr",
    "./websocket",
    "xmlhttprequest",
    15,
    "empty",
    "JSONPPolling",
    "Polling",
    "___eio",
    "document",
    "script",
    "inherit",
    "rNewline",
    "rEscapedNewline",
    "parentNode",
    "removeChild",
    "form",
    "iframe",
    "doPoll",
    "createElement",
    "async",
    "src",
    "insertAt",
    "getElementsByTagName",
    "insertBefore",
    "isUAgecko",
    "navigator",
    "userAgent",
    "body",
    "appendChild",
    "doWrite",
    "complete",
    "initIframe",
    "html",
    "iframeId",
    "area",
    "className",
    "style",
    "position",
    "top",
    "left",
    "target",
    "method",
    "setAttribute",
    "action",
    "value",
    "submit",
    "attachEvent",
    "onreadystatechange",
    "onload",
    "./polling",
    "component-inherit",
    16,
    "Request",
    "undefined",
    "isBinary",
    "create",
    "unloadHandler",
    "requests",
    "abort",
    "request",
    "req",
    "sendXhr",
    "pollXhr",
    "responseType",
    "setRequestHeader",
    "withCredentials",
    "hasXDR",
    "onLoad",
    "responseText",
    "status",
    "requestsCount",
    "onSuccess",
    "fromError",
    "contentType",
    "getResponseHeader",
    "response",
    "XDomainRequest",
    17,
    "hasXHR2",
    "poll",
    "onPause",
    "total",
    "decodePayload",
    "callbackfn",
    "encodePayload",
    "schema",
    "b64",
    "../transport",
    18,
    "WS",
    "WebSocket",
    "check",
    "protocols",
    "ws",
    "addEventListeners",
    "onopen",
    "onmessage",
    "ev",
    "ondrain",
    "encodePacket",
    19,
    "hasCORS",
    "ActiveXObject",
    "has-cors",
    20,
    "useColors",
    "documentElement",
    "firebug",
    "exception",
    "table",
    "toLowerCase",
    "match",
    "parseInt",
    "$1",
    "formatArgs",
    "namespace",
    "diff",
    "c",
    "color",
    "Array",
    "lastC",
    "save",
    "namespaces",
    "removeItem",
    "load",
    "colors",
    "formatters",
    "v",
    "JSON",
    "stringify",
    "./debug",
    21,
    "selectColor",
    "prevColor",
    "disabled",
    "prevTime",
    "prev",
    "format",
    "formatter",
    "logFn",
    "bind",
    22,
    "re",
    "parts",
    "str",
    "m",
    "exec",
    "source",
    "authority",
    "ipv6uri",
    23,
    "encodeBase64Object",
    "encodeArrayBuffer",
    "encodeBase64Packet",
    "contentArray",
    "resultBuffer",
    "encodeBlobAsArrayBuffer",
    "fr",
    "FileReader",
    "readAsArrayBuffer",
    "encodeBlob",
    "dontSendBlobs",
    "blob",
    "map",
    "each",
    "done",
    "next",
    "eachWithIndex",
    "el",
    "keys",
    "hasBinary",
    "sliceBuffer",
    "base64encoder",
    "utf8",
    "isAndroid",
    "isPhantomJS",
    "pong",
    "packetslist",
    "utf8encode",
    "encoded",
    "String",
    "readAsDataURL",
    "b64data",
    "fromCharCode",
    "typed",
    "basic",
    "btoa",
    "utf8decode",
    "charAt",
    "decodeBase64Packet",
    "Number",
    "asArray",
    "rest",
    "setLengthHeader",
    "encodeOne",
    "doneCallback",
    "encodePayloadAsBlob",
    "encodePayloadAsArrayBuffer",
    "results",
    "join",
    "decodePayloadAsBinary",
    "chr",
    "ret",
    "encodedPackets",
    "totalLength",
    "reduce",
    "acc",
    "toString",
    "resultArray",
    "bufferIndex",
    "forEach",
    "isString",
    "ab",
    "view",
    "charCodeAt",
    "lenStr",
    "binaryIdentifier",
    "lengthAry",
    "bufferTail",
    "buffers",
    "numberTooLong",
    "tailArray",
    "msgLength",
    "./keys",
    "arraybuffer.slice",
    "base64-arraybuffer",
    "has-binary",
    24,
    "Object",
    "arr",
    "has",
    25,
    26,
    "_hasBinary",
    "Buffer",
    "isBuffer",
    "File",
    "isArray",
    "toJSON",
    "isarray",
    27,
    28,
    29,
    30,
    "undef",
    "isSupported",
    "serialized",
    "JSON3",
    "stringifySupported",
    "isExtended",
    "getClass",
    "parse",
    "parseSupported",
    "isProperty",
    "isLoader",
    "define",
    "amd",
    "nativeJSON",
    "nodeType",
    "getUTCFullYear",
    "getUTCMonth",
    "getUTCDate",
    "getUTCHours",
    "getUTCMinutes",
    "getUTCSeconds",
    "getUTCMilliseconds",
    "functionClass",
    "dateClass",
    "numberClass",
    "stringClass",
    "arrayClass",
    "booleanClass",
    "charIndexBuggy",
    "Months",
    "getDay",
    "year",
    "month",
    "property",
    "members",
    "__proto__",
    "original",
    "parent",
    "PrimitiveTypes",
    "boolean",
    "number",
    "string",
    "isHostType",
    "object",
    "Properties",
    "valueOf",
    "isFunction",
    "isConstructor",
    "hasProperty",
    "Escapes",
    92,
    34,
    "leadingZeroes",
    "toPaddedString",
    "width",
    "unicodePrefix",
    "quote",
    "symbols",
    "isLarge",
    "charCode",
    "serialize",
    "properties",
    "whitespace",
    "indentation",
    "date",
    "time",
    "hours",
    "minutes",
    "seconds",
    "milliseconds",
    "element",
    "prefix",
    "TypeError",
    "filter",
    "Index",
    "Source",
    "Unescapes",
    47,
    98,
    116,
    110,
    102,
    114,
    "SyntaxError",
    "lex",
    "begin",
    "isSigned",
    "get",
    "hasMembers",
    "update",
    "walk",
    31,
    "parseFloat",
    "y",
    "d",
    "h",
    "short",
    "round",
    "long",
    "plural",
    "ceil",
    32,
    "values",
    "vals",
    "merge",
    "isEmpty",
    33,
    "rvalidchars",
    "rvalidescape",
    "rvalidtokens",
    "rvalidbraces",
    "rtrimLeft",
    "rtrimRight",
    "encodeURIComponent",
    "qs",
    "qry",
    "pairs",
    "pair",
    "decodeURIComponent",
    35,
    36,
    37,
    "lookup",
    "io",
    "parsed",
    "url",
    "forceNew",
    "multiplex",
    "Manager",
    "cache",
    "managers",
    "connect",
    "./manager",
    "./url",
    "socket.io-parser",
    38,
    "nsps",
    "subs",
    "reconnection",
    "reconnectionAttempts",
    "Infinity",
    "reconnectionDelay",
    "reconnectionDelayMax",
    "randomizationFactor",
    "backoff",
    "connected",
    "encoding",
    "packetBuffer",
    "encoder",
    "Encoder",
    "decoder",
    "Decoder",
    "autoConnect",
    "eio",
    "emitAll",
    "nsp",
    "updateSocketIds",
    "engine",
    "_reconnection",
    "_reconnectionAttempts",
    "_reconnectionDelay",
    "_randomizationFactor",
    "_reconnectionDelayMax",
    "_timeout",
    "maybeReconnectOnOpen",
    "reconnecting",
    "reconnect",
    "skipReconnect",
    "openSub",
    "errorSub",
    "timer",
    "destroy",
    "ondata",
    "add",
    "ondecoded",
    "processPacketQueue",
    "pack",
    "sub",
    "disconnect",
    "delay",
    "onreconnect",
    "attempt",
    "./on",
    "backo2",
    "component-bind",
    "engine.io-client",
    "object-component",
    39,
    40,
    "json",
    "ids",
    "acks",
    "receiveBuffer",
    "sendBuffer",
    "disconnected",
    "toArray",
    "hasBin",
    "events",
    "connect_error",
    "connect_timeout",
    "reconnect_attempt",
    "reconnect_failed",
    "reconnect_error",
    "subEvents",
    "unshift",
    "parserType",
    "EVENT",
    "BINARY_EVENT",
    "CONNECT",
    "onpacket",
    "onconnect",
    "onevent",
    "ACK",
    "onack",
    "BINARY_ACK",
    "DISCONNECT",
    "ondisconnect",
    "ERROR",
    "ack",
    "sent",
    "emitBuffered",
    "to-array",
    41,
    "loc",
    "href",
    42,
    "isBuf",
    "deconstructPacket",
    "_deconstructPacket",
    "placeholder",
    "_placeholder",
    "num",
    "newData",
    "packetData",
    "attachments",
    "reconstructPacket",
    "_reconstructPacket",
    "removeBlobs",
    "_removeBlobs",
    "curKey",
    "containingObject",
    "pendingBlobs",
    "fileReader",
    "bloblessData",
    "./is-buffer",
    43,
    "encodeAsString",
    "encodeAsBinary",
    "writeEncoding",
    "deconstruction",
    "binary",
    "reconstructor",
    "decodeString",
    "types",
    "BinaryReconstructor",
    "reconPack",
    "takeBinaryData",
    "finishedReconstruction",
    "binData",
    "./binary",
    "json3",
    44,
    45,
    "list",
    "array",
    46,
    "root",
    "ucs2decode",
    "extra",
    "output",
    "counter",
    "ucs2encode",
    "stringFromCharCode",
    "checkScalarValue",
    "codePoint",
    "toUpperCase",
    "createByte",
    "encodeCodePoint",
    "symbol",
    "codePoints",
    "byteString",
    "readContinuationByte",
    "byteIndex",
    "byteCount",
    "continuationByte",
    "byteArray",
    "decodeSymbol",
    "byte1",
    "byte2",
    "byte3",
    "byte4",
    "tmp",
    "freeExports",
    "freeModule",
    "freeGlobal",
    "version",
    "instance",
    "MozWebSocket",
    48,
    "_classCallCheck",
    "Constructor",
    "_possibleConstructorReturn",
    "ReferenceError",
    "_inherits",
    "subClass",
    "superClass",
    "enumerable",
    "configurable",
    "setPrototypeOf",
    "extend",
    "Y",
    "Connector",
    "_Y$AbstractConnector",
    "room",
    "role",
    "_this",
    "getPrototypeOf",
    "_onConnect",
    "userJoined",
    "_onYjsEvent",
    "setUserId",
    "receiveMessage",
    "_onDisconnect",
    "peer",
    "userLeft",
    "_createClass",
    "_get",
    "uid",
    "AbstractConnector",
    "defineProperties",
    "props",
    "descriptor",
    "defineProperty",
    "protoProps",
    "staticProps",
    "receiver",
    "getOwnPropertyDescriptor",
    "getter",
    "socket.io-client"
  ],
  "mappings": "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",
  "file": "y-websockets-client.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n",
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n},{}],2:[function(require,module,exports){\n/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n},{}],3:[function(require,module,exports){\n\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n},{}],4:[function(require,module,exports){\n/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n},{}],5:[function(require,module,exports){\n(function (global){\n/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],6:[function(require,module,exports){\n/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n},{}],7:[function(require,module,exports){\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n},{}],8:[function(require,module,exports){\n\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n},{}],9:[function(require,module,exports){\n\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\ntry {\n  if (window.localStorage) debug.enable(localStorage.debug);\n} catch(e){}\n\n},{}],10:[function(require,module,exports){\n\nmodule.exports =  require('./lib/');\n\n},{\"./lib/\":11}],11:[function(require,module,exports){\n\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n},{\"./socket\":12,\"engine.io-parser\":23}],12:[function(require,module,exports){\n(function (global){\n/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.host = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.host) {\n    var pieces = opts.host.split(':');\n    opts.hostname = pieces.shift();\n    if (pieces.length) {\n      opts.port = pieces.pop();\n    } else if (!opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? '443' : '80';\n    }\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.callbackBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized || null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 == this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  var transport;\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.emit('error', err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api public\n*/\n\nSocket.prototype.ping = function () {\n  this.sendPacket('ping');\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  for (var i = 0; i < this.prevBufferLen; i++) {\n    if (this.callbackBuffer[i]) {\n      this.callbackBuffer[i]();\n    }\n  }\n\n  this.writeBuffer.splice(0, this.prevBufferLen);\n  this.callbackBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (this.writeBuffer.length == 0) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, fn) {\n  this.sendPacket('message', msg, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, fn) {\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  var packet = { type: type, data: data };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  this.callbackBuffer.push(fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    function close() {\n      self.onClose('forced close');\n      debug('socket closing - telling transport to close');\n      self.transport.close();\n    }\n\n    function cleanupAndClose() {\n      self.removeListener('upgrade', cleanupAndClose);\n      self.removeListener('upgradeError', cleanupAndClose);\n      close();\n    }\n\n    function waitForUpgrade() {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      self.once('upgrade', cleanupAndClose);\n      self.once('upgradeError', cleanupAndClose);\n    }\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // clean buffers in next tick, so developers can still\n    // grab the buffers on `close` event\n    setTimeout(function() {\n      self.writeBuffer = [];\n      self.callbackBuffer = [];\n      self.prevBufferLen = 0;\n    }, 0);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./transport\":13,\"./transports\":14,\"component-emitter\":7,\"debug\":20,\"engine.io-parser\":23,\"indexof\":28,\"parsejson\":33,\"parseqs\":34,\"parseuri\":22}],13:[function(require,module,exports){\n/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * A counter used to prevent collisions in the timestamps used\n * for cache busting.\n */\n\nTransport.timestamps = 0;\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n},{\"component-emitter\":7,\"engine.io-parser\":23}],14:[function(require,module,exports){\n(function (global){\n/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./polling-jsonp\":15,\"./polling-xhr\":16,\"./websocket\":18,\"xmlhttprequest\":19}],15:[function(require,module,exports){\n(function (global){\n\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  insertAt.parentNode.insertBefore(script, insertAt);\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./polling\":17,\"component-inherit\":8}],16:[function(require,module,exports){\n(function (global){\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        data = 'ok';\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./polling\":17,\"component-emitter\":7,\"component-inherit\":8,\"debug\":20,\"xmlhttprequest\":19}],17:[function(require,module,exports){\n/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = require('xmlhttprequest');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = +new Date + '-' + Transport.timestamps++;\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  return schema + '://' + this.hostname + port + this.path + query;\n};\n\n},{\"../transport\":13,\"component-inherit\":8,\"debug\":20,\"engine.io-parser\":23,\"parseqs\":34,\"xmlhttprequest\":19}],18:[function(require,module,exports){\n/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:websocket');\n\n/**\n * `ws` exposes a WebSocket-compatible interface in\n * Node, or the `WebSocket` or `MozWebSocket` globals\n * in the browser.\n */\n\nvar WebSocket = require('ws');\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = { agent: this.agent };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  this.ws = new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  this.ws.binaryType = 'arraybuffer';\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  for (var i = 0, l = packets.length; i < l; i++) {\n    parser.encodePacket(packets[i], this.supportsBinary, function(data) {\n      //Sometimes the websocket has already been closed but the browser didn't\n      //have a chance of informing us about it yet, in that case send will\n      //throw an error\n      try {\n        self.ws.send(data);\n      } catch (e){\n        debug('websocket closed before onclose event');\n      }\n    });\n  }\n\n  function ondrain() {\n    self.writable = true;\n    self.emit('drain');\n  }\n  // fake drain\n  // defer to next tick to allow Socket to clear writeBuffer\n  setTimeout(ondrain, 0);\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = +new Date;\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  return schema + '://' + this.hostname + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n},{\"../transport\":13,\"component-inherit\":8,\"debug\":20,\"engine.io-parser\":23,\"parseqs\":34,\"ws\":47}],19:[function(require,module,exports){\n// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n\n},{\"has-cors\":27}],20:[function(require,module,exports){\n\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // This hackery is required for IE8,\n  // where the `console.log` function doesn't have 'apply'\n  return 'object' == typeof console\n    && 'function' == typeof console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      localStorage.removeItem('debug');\n    } else {\n      localStorage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = localStorage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n},{\"./debug\":21}],21:[function(require,module,exports){\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n},{\"ms\":31}],22:[function(require,module,exports){\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n\n},{}],23:[function(require,module,exports){\n(function (global){\n/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar base64encoder = require('base64-arraybuffer');\nvar after = require('after');\nvar utf8 = require('utf8');\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./keys\":24,\"after\":1,\"arraybuffer.slice\":2,\"base64-arraybuffer\":4,\"blob\":5,\"has-binary\":26,\"utf8\":46}],24:[function(require,module,exports){\n\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n},{}],25:[function(require,module,exports){\n\n/**\n * Returns `this`. Execute this without a \"context\" (i.e. without it being\n * attached to an object of the left-hand side), and `this` points to the\n * \"global\" scope of the current JS execution.\n */\n\nmodule.exports = (function () { return this; })();\n\n},{}],26:[function(require,module,exports){\n(function (global){\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"isarray\":29}],27:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar global = require('global');\n\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = 'XMLHttpRequest' in global &&\n    'withCredentials' in new global.XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n},{\"global\":25}],28:[function(require,module,exports){\n\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n},{}],29:[function(require,module,exports){\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n},{}],30:[function(require,module,exports){\n/*! JSON v3.2.6 | http://bestiejs.github.io/json3 | Copyright 2012-2013, Kit Cambridge | http://kit.mit-license.org */\n;(function (window) {\n  // Convenience aliases.\n  var getClass = {}.toString, isProperty, forEach, undef;\n\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // Detect native implementations.\n  var nativeJSON = typeof JSON == \"object\" && JSON;\n\n  // Set up the JSON 3 namespace, preferring the CommonJS `exports` object if\n  // available.\n  var JSON3 = typeof exports == \"object\" && exports && !exports.nodeType && exports;\n\n  if (JSON3 && nativeJSON) {\n    // Explicitly delegate to the native `stringify` and `parse`\n    // implementations in CommonJS environments.\n    JSON3.stringify = nativeJSON.stringify;\n    JSON3.parse = nativeJSON.parse;\n  } else {\n    // Export for web browsers, JavaScript engines, and asynchronous module\n    // loaders, using the global `JSON` object if available.\n    JSON3 = window.JSON = nativeJSON || {};\n  }\n\n  // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n  var isExtended = new Date(-3509827334573292);\n  try {\n    // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n    // results for certain dates in Opera >= 10.53.\n    isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n      // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n  } catch (exception) {}\n\n  // Internal: Determines whether the native `JSON.stringify` and `parse`\n  // implementations are spec-compliant. Based on work by Ken Snyder.\n  function has(name) {\n    if (has[name] !== undef) {\n      // Return cached feature test result.\n      return has[name];\n    }\n\n    var isSupported;\n    if (name == \"bug-string-char-index\") {\n      // IE <= 7 doesn't support accessing string characters using square\n      // bracket notation. IE 8 only supports this for primitives.\n      isSupported = \"a\"[0] != \"a\";\n    } else if (name == \"json\") {\n      // Indicates whether both `JSON.stringify` and `JSON.parse` are\n      // supported.\n      isSupported = has(\"json-stringify\") && has(\"json-parse\");\n    } else {\n      var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n      // Test `JSON.stringify`.\n      if (name == \"json-stringify\") {\n        var stringify = JSON3.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n        if (stringifySupported) {\n          // A test function object with a custom `toJSON` method.\n          (value = function () {\n            return 1;\n          }).toJSON = value;\n          try {\n            stringifySupported =\n              // Firefox 3.1b1 and b2 serialize string, number, and boolean\n              // primitives as object literals.\n              stringify(0) === \"0\" &&\n              // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n              // literals.\n              stringify(new Number()) === \"0\" &&\n              stringify(new String()) == '\"\"' &&\n              // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n              // does not define a canonical JSON representation (this applies to\n              // objects with `toJSON` properties as well, *unless* they are nested\n              // within an object or array).\n              stringify(getClass) === undef &&\n              // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n              // FF 3.1b3 pass this test.\n              stringify(undef) === undef &&\n              // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n              // respectively, if the value is omitted entirely.\n              stringify() === undef &&\n              // FF 3.1b1, 2 throw an error if the given value is not a number,\n              // string, array, object, Boolean, or `null` literal. This applies to\n              // objects with custom `toJSON` methods as well, unless they are nested\n              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n              // methods entirely.\n              stringify(value) === \"1\" &&\n              stringify([value]) == \"[1]\" &&\n              // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n              // `\"[null]\"`.\n              stringify([undef]) == \"[null]\" &&\n              // YUI 3.0.0b1 fails to serialize `null` literals.\n              stringify(null) == \"null\" &&\n              // FF 3.1b1, 2 halts serialization if an array contains a function:\n              // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n              // elides non-JSON values from objects and arrays, unless they\n              // define custom `toJSON` methods.\n              stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n              // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n              // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n              stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n              // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n              stringify(null, value) === \"1\" &&\n              stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n              // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n              // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n              // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n              // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n          } catch (exception) {\n            stringifySupported = false;\n          }\n        }\n        isSupported = stringifySupported;\n      }\n      // Test `JSON.parse`.\n      if (name == \"json-parse\") {\n        var parse = JSON3.parse;\n        if (typeof parse == \"function\") {\n          try {\n            // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n            // Conforming implementations should also coerce the initial argument to\n            // a string prior to parsing.\n            if (parse(\"0\") === 0 && !parse(false)) {\n              // Simple parsing test.\n              value = parse(serialized);\n              var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n              if (parseSupported) {\n                try {\n                  // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                  parseSupported = !parse('\"\\t\"');\n                } catch (exception) {}\n                if (parseSupported) {\n                  try {\n                    // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                    // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                    // certain octal literals.\n                    parseSupported = parse(\"01\") !== 1;\n                  } catch (exception) {}\n                }\n                if (parseSupported) {\n                  try {\n                    // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                    // points. These environments, along with FF 3.1b1 and 2,\n                    // also allow trailing commas in JSON objects and arrays.\n                    parseSupported = parse(\"1.\") !== 1;\n                  } catch (exception) {}\n                }\n              }\n            }\n          } catch (exception) {\n            parseSupported = false;\n          }\n        }\n        isSupported = parseSupported;\n      }\n    }\n    return has[name] = !!isSupported;\n  }\n\n  if (!has(\"json\")) {\n    // Common `[[Class]]` name aliases.\n    var functionClass = \"[object Function]\";\n    var dateClass = \"[object Date]\";\n    var numberClass = \"[object Number]\";\n    var stringClass = \"[object String]\";\n    var arrayClass = \"[object Array]\";\n    var booleanClass = \"[object Boolean]\";\n\n    // Detect incomplete support for accessing string characters by index.\n    var charIndexBuggy = has(\"bug-string-char-index\");\n\n    // Define additional utility methods if the `Date` methods are buggy.\n    if (!isExtended) {\n      var floor = Math.floor;\n      // A mapping between the months of the year and the number of days between\n      // January 1st and the first of the respective month.\n      var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n      // Internal: Calculates the number of days between the Unix epoch and the\n      // first day of the given month.\n      var getDay = function (year, month) {\n        return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n      };\n    }\n\n    // Internal: Determines if a property is a direct property of the given\n    // object. Delegates to the native `Object#hasOwnProperty` method.\n    if (!(isProperty = {}.hasOwnProperty)) {\n      isProperty = function (property) {\n        var members = {}, constructor;\n        if ((members.__proto__ = null, members.__proto__ = {\n          // The *proto* property cannot be set multiple times in recent\n          // versions of Firefox and SeaMonkey.\n          \"toString\": 1\n        }, members).toString != getClass) {\n          // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n          // supports the mutable *proto* property.\n          isProperty = function (property) {\n            // Capture and break the object's prototype chain (see section 8.6.2\n            // of the ES 5.1 spec). The parenthesized expression prevents an\n            // unsafe transformation by the Closure Compiler.\n            var original = this.__proto__, result = property in (this.__proto__ = null, this);\n            // Restore the original prototype chain.\n            this.__proto__ = original;\n            return result;\n          };\n        } else {\n          // Capture a reference to the top-level `Object` constructor.\n          constructor = members.constructor;\n          // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n          // other environments.\n          isProperty = function (property) {\n            var parent = (this.constructor || constructor).prototype;\n            return property in this && !(property in parent && this[property] === parent[property]);\n          };\n        }\n        members = null;\n        return isProperty.call(this, property);\n      };\n    }\n\n    // Internal: A set of primitive types used by `isHostType`.\n    var PrimitiveTypes = {\n      'boolean': 1,\n      'number': 1,\n      'string': 1,\n      'undefined': 1\n    };\n\n    // Internal: Determines if the given object `property` value is a\n    // non-primitive.\n    var isHostType = function (object, property) {\n      var type = typeof object[property];\n      return type == 'object' ? !!object[property] : !PrimitiveTypes[type];\n    };\n\n    // Internal: Normalizes the `for...in` iteration algorithm across\n    // environments. Each enumerated key is yielded to a `callback` function.\n    forEach = function (object, callback) {\n      var size = 0, Properties, members, property;\n\n      // Tests for bugs in the current environment's `for...in` algorithm. The\n      // `valueOf` property inherits the non-enumerable flag from\n      // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n      (Properties = function () {\n        this.valueOf = 0;\n      }).prototype.valueOf = 0;\n\n      // Iterate over a new instance of the `Properties` class.\n      members = new Properties();\n      for (property in members) {\n        // Ignore all properties inherited from `Object.prototype`.\n        if (isProperty.call(members, property)) {\n          size++;\n        }\n      }\n      Properties = members = null;\n\n      // Normalize the iteration algorithm.\n      if (!size) {\n        // A list of non-enumerable properties inherited from `Object.prototype`.\n        members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n        // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n        // properties.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, length;\n          var hasProperty = !isFunction && typeof object.constructor != 'function' && isHostType(object, 'hasOwnProperty') ? object.hasOwnProperty : isProperty;\n          for (property in object) {\n            // Gecko <= 1.0 enumerates the `prototype` property of functions under\n            // certain conditions; IE does not.\n            if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for each non-enumerable property.\n          for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n        };\n      } else if (size == 2) {\n        // Safari <= 2.0.4 enumerates shadowed properties twice.\n        forEach = function (object, callback) {\n          // Create a set of iterated properties.\n          var members = {}, isFunction = getClass.call(object) == functionClass, property;\n          for (property in object) {\n            // Store each property name to prevent double enumeration. The\n            // `prototype` property of functions is not enumerated due to cross-\n            // environment inconsistencies.\n            if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n        };\n      } else {\n        // No bugs detected; use the standard `for...in` algorithm.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n          for (property in object) {\n            if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for the `constructor` property due to\n          // cross-environment inconsistencies.\n          if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n            callback(property);\n          }\n        };\n      }\n      return forEach(object, callback);\n    };\n\n    // Public: Serializes a JavaScript `value` as a JSON string. The optional\n    // `filter` argument may specify either a function that alters how object and\n    // array members are serialized, or an array of strings and numbers that\n    // indicates which properties should be serialized. The optional `width`\n    // argument may be either a string or number that specifies the indentation\n    // level of the output.\n    if (!has(\"json-stringify\")) {\n      // Internal: A map of control characters and their escaped equivalents.\n      var Escapes = {\n        92: \"\\\\\\\\\",\n        34: '\\\\\"',\n        8: \"\\\\b\",\n        12: \"\\\\f\",\n        10: \"\\\\n\",\n        13: \"\\\\r\",\n        9: \"\\\\t\"\n      };\n\n      // Internal: Converts `value` into a zero-padded string such that its\n      // length is at least equal to `width`. The `width` must be <= 6.\n      var leadingZeroes = \"000000\";\n      var toPaddedString = function (width, value) {\n        // The `|| 0` expression is necessary to work around a bug in\n        // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n        return (leadingZeroes + (value || 0)).slice(-width);\n      };\n\n      // Internal: Double-quotes a string `value`, replacing all ASCII control\n      // characters (characters with code unit values between 0 and 31) with\n      // their escaped equivalents. This is an implementation of the\n      // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n      var unicodePrefix = \"\\\\u00\";\n      var quote = function (value) {\n        var result = '\"', index = 0, length = value.length, isLarge = length > 10 && charIndexBuggy, symbols;\n        if (isLarge) {\n          symbols = value.split(\"\");\n        }\n        for (; index < length; index++) {\n          var charCode = value.charCodeAt(index);\n          // If the character is a control character, append its Unicode or\n          // shorthand escape sequence; otherwise, append the character as-is.\n          switch (charCode) {\n            case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n              result += Escapes[charCode];\n              break;\n            default:\n              if (charCode < 32) {\n                result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                break;\n              }\n              result += isLarge ? symbols[index] : charIndexBuggy ? value.charAt(index) : value[index];\n          }\n        }\n        return result + '\"';\n      };\n\n      // Internal: Recursively serializes an object. Implements the\n      // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n      var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n        var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n        try {\n          // Necessary for host object support.\n          value = object[property];\n        } catch (exception) {}\n        if (typeof value == \"object\" && value) {\n          className = getClass.call(value);\n          if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n            if (value > -1 / 0 && value < 1 / 0) {\n              // Dates are serialized according to the `Date#toJSON` method\n              // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n              // for the ISO 8601 date time string format.\n              if (getDay) {\n                // Manually compute the year, month, date, hours, minutes,\n                // seconds, and milliseconds if the `getUTC*` methods are\n                // buggy. Adapted from @Yaffle's `date-shim` project.\n                date = floor(value / 864e5);\n                for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                date = 1 + date - getDay(year, month);\n                // The `time` value specifies the time within the day (see ES\n                // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                // to compute `A modulo B`, as the `%` operator does not\n                // correspond to the `modulo` operation for negative numbers.\n                time = (value % 864e5 + 864e5) % 864e5;\n                // The hours, minutes, seconds, and milliseconds are obtained by\n                // decomposing the time within the day. See section 15.9.1.10.\n                hours = floor(time / 36e5) % 24;\n                minutes = floor(time / 6e4) % 60;\n                seconds = floor(time / 1e3) % 60;\n                milliseconds = time % 1e3;\n              } else {\n                year = value.getUTCFullYear();\n                month = value.getUTCMonth();\n                date = value.getUTCDate();\n                hours = value.getUTCHours();\n                minutes = value.getUTCMinutes();\n                seconds = value.getUTCSeconds();\n                milliseconds = value.getUTCMilliseconds();\n              }\n              // Serialize extended years correctly.\n              value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                // Months, dates, hours, minutes, and seconds should have two\n                // digits; milliseconds should have three.\n                \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                // Milliseconds are optional in ES 5.0, but required in 5.1.\n                \".\" + toPaddedString(3, milliseconds) + \"Z\";\n            } else {\n              value = null;\n            }\n          } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n            // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n            // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n            // ignores all `toJSON` methods on these objects unless they are\n            // defined directly on an instance.\n            value = value.toJSON(property);\n          }\n        }\n        if (callback) {\n          // If a replacement function was provided, call it to obtain the value\n          // for serialization.\n          value = callback.call(object, property, value);\n        }\n        if (value === null) {\n          return \"null\";\n        }\n        className = getClass.call(value);\n        if (className == booleanClass) {\n          // Booleans are represented literally.\n          return \"\" + value;\n        } else if (className == numberClass) {\n          // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n          // `\"null\"`.\n          return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n        } else if (className == stringClass) {\n          // Strings are double-quoted and escaped.\n          return quote(\"\" + value);\n        }\n        // Recursively serialize objects and arrays.\n        if (typeof value == \"object\") {\n          // Check for cyclic structures. This is a linear search; performance\n          // is inversely proportional to the number of unique nested objects.\n          for (length = stack.length; length--;) {\n            if (stack[length] === value) {\n              // Cyclic structures cannot be serialized by `JSON.stringify`.\n              throw TypeError();\n            }\n          }\n          // Add the object to the stack of traversed objects.\n          stack.push(value);\n          results = [];\n          // Save the current indentation level and indent one additional level.\n          prefix = indentation;\n          indentation += whitespace;\n          if (className == arrayClass) {\n            // Recursively serialize array elements.\n            for (index = 0, length = value.length; index < length; index++) {\n              element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n              results.push(element === undef ? \"null\" : element);\n            }\n            result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n          } else {\n            // Recursively serialize object members. Members are selected from\n            // either a user-specified list of property names, or the object\n            // itself.\n            forEach(properties || value, function (property) {\n              var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n              if (element !== undef) {\n                // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                // is not the empty string, let `member` {quote(property) + \":\"}\n                // be the concatenation of `member` and the `space` character.\"\n                // The \"`space` character\" refers to the literal space\n                // character, not the `space` {width} argument provided to\n                // `JSON.stringify`.\n                results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n              }\n            });\n            result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n          }\n          // Remove the object from the traversed object stack.\n          stack.pop();\n          return result;\n        }\n      };\n\n      // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n      JSON3.stringify = function (source, filter, width) {\n        var whitespace, callback, properties, className;\n        if (typeof filter == \"function\" || typeof filter == \"object\" && filter) {\n          if ((className = getClass.call(filter)) == functionClass) {\n            callback = filter;\n          } else if (className == arrayClass) {\n            // Convert the property names array into a makeshift set.\n            properties = {};\n            for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n          }\n        }\n        if (width) {\n          if ((className = getClass.call(width)) == numberClass) {\n            // Convert the `width` to an integer and create a string containing\n            // `width` number of space characters.\n            if ((width -= width % 1) > 0) {\n              for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n            }\n          } else if (className == stringClass) {\n            whitespace = width.length <= 10 ? width : width.slice(0, 10);\n          }\n        }\n        // Opera <= 7.54u2 discards the values associated with empty string keys\n        // (`\"\"`) only if they are used directly within an object member list\n        // (e.g., `!(\"\" in { \"\": 1})`).\n        return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n      };\n    }\n\n    // Public: Parses a JSON source string.\n    if (!has(\"json-parse\")) {\n      var fromCharCode = String.fromCharCode;\n\n      // Internal: A map of escaped control characters and their unescaped\n      // equivalents.\n      var Unescapes = {\n        92: \"\\\\\",\n        34: '\"',\n        47: \"/\",\n        98: \"\\b\",\n        116: \"\\t\",\n        110: \"\\n\",\n        102: \"\\f\",\n        114: \"\\r\"\n      };\n\n      // Internal: Stores the parser state.\n      var Index, Source;\n\n      // Internal: Resets the parser state and throws a `SyntaxError`.\n      var abort = function() {\n        Index = Source = null;\n        throw SyntaxError();\n      };\n\n      // Internal: Returns the next token, or `\"$\"` if the parser has reached\n      // the end of the source string. A token may be a string, number, `null`\n      // literal, or Boolean literal.\n      var lex = function () {\n        var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n        while (Index < length) {\n          charCode = source.charCodeAt(Index);\n          switch (charCode) {\n            case 9: case 10: case 13: case 32:\n              // Skip whitespace tokens, including tabs, carriage returns, line\n              // feeds, and space characters.\n              Index++;\n              break;\n            case 123: case 125: case 91: case 93: case 58: case 44:\n              // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n              // the current position.\n              value = charIndexBuggy ? source.charAt(Index) : source[Index];\n              Index++;\n              return value;\n            case 34:\n              // `\"` delimits a JSON string; advance to the next character and\n              // begin parsing the string. String tokens are prefixed with the\n              // sentinel `@` character to distinguish them from punctuators and\n              // end-of-string tokens.\n              for (value = \"@\", Index++; Index < length;) {\n                charCode = source.charCodeAt(Index);\n                if (charCode < 32) {\n                  // Unescaped ASCII control characters (those with a code unit\n                  // less than the space character) are not permitted.\n                  abort();\n                } else if (charCode == 92) {\n                  // A reverse solidus (`\\`) marks the beginning of an escaped\n                  // control character (including `\"`, `\\`, and `/`) or Unicode\n                  // escape sequence.\n                  charCode = source.charCodeAt(++Index);\n                  switch (charCode) {\n                    case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                      // Revive escaped control characters.\n                      value += Unescapes[charCode];\n                      Index++;\n                      break;\n                    case 117:\n                      // `\\u` marks the beginning of a Unicode escape sequence.\n                      // Advance to the first character and validate the\n                      // four-digit code point.\n                      begin = ++Index;\n                      for (position = Index + 4; Index < position; Index++) {\n                        charCode = source.charCodeAt(Index);\n                        // A valid sequence comprises four hexdigits (case-\n                        // insensitive) that form a single hexadecimal value.\n                        if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                          // Invalid Unicode escape sequence.\n                          abort();\n                        }\n                      }\n                      // Revive the escaped character.\n                      value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                      break;\n                    default:\n                      // Invalid escape sequence.\n                      abort();\n                  }\n                } else {\n                  if (charCode == 34) {\n                    // An unescaped double-quote character marks the end of the\n                    // string.\n                    break;\n                  }\n                  charCode = source.charCodeAt(Index);\n                  begin = Index;\n                  // Optimize for the common case where a string is valid.\n                  while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                    charCode = source.charCodeAt(++Index);\n                  }\n                  // Append the string as-is.\n                  value += source.slice(begin, Index);\n                }\n              }\n              if (source.charCodeAt(Index) == 34) {\n                // Advance to the next character and return the revived string.\n                Index++;\n                return value;\n              }\n              // Unterminated string.\n              abort();\n            default:\n              // Parse numbers and literals.\n              begin = Index;\n              // Advance past the negative sign, if one is specified.\n              if (charCode == 45) {\n                isSigned = true;\n                charCode = source.charCodeAt(++Index);\n              }\n              // Parse an integer or floating-point value.\n              if (charCode >= 48 && charCode <= 57) {\n                // Leading zeroes are interpreted as octal literals.\n                if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                  // Illegal octal literal.\n                  abort();\n                }\n                isSigned = false;\n                // Parse the integer component.\n                for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                // Floats cannot contain a leading decimal point; however, this\n                // case is already accounted for by the parser.\n                if (source.charCodeAt(Index) == 46) {\n                  position = ++Index;\n                  // Parse the decimal component.\n                  for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal trailing decimal.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Parse exponents. The `e` denoting the exponent is\n                // case-insensitive.\n                charCode = source.charCodeAt(Index);\n                if (charCode == 101 || charCode == 69) {\n                  charCode = source.charCodeAt(++Index);\n                  // Skip past the sign following the exponent, if one is\n                  // specified.\n                  if (charCode == 43 || charCode == 45) {\n                    Index++;\n                  }\n                  // Parse the exponential component.\n                  for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal empty exponent.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Coerce the parsed value to a JavaScript number.\n                return +source.slice(begin, Index);\n              }\n              // A negative sign may only precede numbers.\n              if (isSigned) {\n                abort();\n              }\n              // `true`, `false`, and `null` literals.\n              if (source.slice(Index, Index + 4) == \"true\") {\n                Index += 4;\n                return true;\n              } else if (source.slice(Index, Index + 5) == \"false\") {\n                Index += 5;\n                return false;\n              } else if (source.slice(Index, Index + 4) == \"null\") {\n                Index += 4;\n                return null;\n              }\n              // Unrecognized token.\n              abort();\n          }\n        }\n        // Return the sentinel `$` character if the parser has reached the end\n        // of the source string.\n        return \"$\";\n      };\n\n      // Internal: Parses a JSON `value` token.\n      var get = function (value) {\n        var results, hasMembers;\n        if (value == \"$\") {\n          // Unexpected end of input.\n          abort();\n        }\n        if (typeof value == \"string\") {\n          if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n            // Remove the sentinel `@` character.\n            return value.slice(1);\n          }\n          // Parse object and array literals.\n          if (value == \"[\") {\n            // Parses a JSON array, returning a new JavaScript array.\n            results = [];\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing square bracket marks the end of the array literal.\n              if (value == \"]\") {\n                break;\n              }\n              // If the array literal contains elements, the current token\n              // should be a comma separating the previous element from the\n              // next.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"]\") {\n                    // Unexpected trailing `,` in array literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each array element.\n                  abort();\n                }\n              }\n              // Elisions and leading commas are not permitted.\n              if (value == \",\") {\n                abort();\n              }\n              results.push(get(value));\n            }\n            return results;\n          } else if (value == \"{\") {\n            // Parses a JSON object, returning a new JavaScript object.\n            results = {};\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing curly brace marks the end of the object literal.\n              if (value == \"}\") {\n                break;\n              }\n              // If the object literal contains members, the current token\n              // should be a comma separator.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"}\") {\n                    // Unexpected trailing `,` in object literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each object member.\n                  abort();\n                }\n              }\n              // Leading commas are not permitted, object property names must be\n              // double-quoted strings, and a `:` must separate each property\n              // name and value.\n              if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                abort();\n              }\n              results[value.slice(1)] = get(lex());\n            }\n            return results;\n          }\n          // Unexpected token encountered.\n          abort();\n        }\n        return value;\n      };\n\n      // Internal: Updates a traversed object member.\n      var update = function(source, property, callback) {\n        var element = walk(source, property, callback);\n        if (element === undef) {\n          delete source[property];\n        } else {\n          source[property] = element;\n        }\n      };\n\n      // Internal: Recursively traverses a parsed JSON object, invoking the\n      // `callback` function for each value. This is an implementation of the\n      // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n      var walk = function (source, property, callback) {\n        var value = source[property], length;\n        if (typeof value == \"object\" && value) {\n          // `forEach` can't be used to traverse an array in Opera <= 8.54\n          // because its `Object#hasOwnProperty` implementation returns `false`\n          // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n          if (getClass.call(value) == arrayClass) {\n            for (length = value.length; length--;) {\n              update(value, length, callback);\n            }\n          } else {\n            forEach(value, function (property) {\n              update(value, property, callback);\n            });\n          }\n        }\n        return callback.call(source, property, value);\n      };\n\n      // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n      JSON3.parse = function (source, callback) {\n        var result, value;\n        Index = 0;\n        Source = \"\" + source;\n        result = get(lex());\n        // If a JSON string contains multiple tokens, it is invalid.\n        if (lex() != \"$\") {\n          abort();\n        }\n        // Reset the parser state.\n        Index = Source = null;\n        return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n      };\n    }\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}(this));\n\n},{}],31:[function(require,module,exports){\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  var match = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n},{}],32:[function(require,module,exports){\n\n/**\n * HOP ref.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return own keys in `obj`.\n *\n * @param {Object} obj\n * @return {Array}\n * @api public\n */\n\nexports.keys = Object.keys || function(obj){\n  var keys = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n/**\n * Return own values in `obj`.\n *\n * @param {Object} obj\n * @return {Array}\n * @api public\n */\n\nexports.values = function(obj){\n  var vals = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      vals.push(obj[key]);\n    }\n  }\n  return vals;\n};\n\n/**\n * Merge `b` into `a`.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api public\n */\n\nexports.merge = function(a, b){\n  for (var key in b) {\n    if (has.call(b, key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\n/**\n * Return length of `obj`.\n *\n * @param {Object} obj\n * @return {Number}\n * @api public\n */\n\nexports.length = function(obj){\n  return exports.keys(obj).length;\n};\n\n/**\n * Check if `obj` is empty.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api public\n */\n\nexports.isEmpty = function(obj){\n  return 0 == exports.length(obj);\n};\n},{}],33:[function(require,module,exports){\n(function (global){\n/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],34:[function(require,module,exports){\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n},{}],35:[function(require,module,exports){\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host'\n  , 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n  var m = re.exec(str || '')\n    , uri = {}\n    , i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  return uri;\n};\n\n},{}],36:[function(require,module,exports){\n\nmodule.exports = require('./lib/');\n\n},{\"./lib/\":37}],37:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var io;\n\n  if (opts.forceNew || opts['force new connection'] || false === opts.multiplex) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n},{\"./manager\":38,\"./socket\":40,\"./url\":41,\"debug\":9,\"socket.io-parser\":43}],38:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar object = require('object-component');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connected = [];\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].id = this.engine.id;\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n      if (!~indexOf(self.connected, socket)) {\n        self.connected.push(socket);\n      }\n    });\n  }\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connected, socket);\n  if (~index) this.connected.splice(index, 1);\n  if (this.connected.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i]);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  this.skipReconnect = true;\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.engine && this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('close');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n},{\"./on\":39,\"./socket\":40,\"./url\":41,\"backo2\":3,\"component-bind\":6,\"component-emitter\":7,\"debug\":9,\"engine.io-client\":10,\"indexof\":28,\"object-component\":32,\"socket.io-parser\":43}],39:[function(require,module,exports){\n\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n},{}],40:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  if (this.io.autoConnect) this.open();\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  debug('calling ack %s with %j', packet.id, packet.data);\n  var fn = this.acks[packet.id];\n  fn.apply(this, packet.data);\n  delete this.acks[packet.id];\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n},{\"./on\":39,\"component-bind\":6,\"component-emitter\":7,\"debug\":9,\"has-binary\":26,\"socket.io-parser\":43,\"to-array\":45}],41:[function(require,module,exports){\n(function (global){\n\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.hostname + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  // define unique id\n  obj.id = obj.protocol + '://' + obj.host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + obj.host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"debug\":9,\"parseuri\":35}],42:[function(require,module,exports){\n(function (global){\n/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./is-buffer\":44,\"isarray\":29}],43:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar isArray = require('isarray');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'BINARY_EVENT',\n  'ACK',\n  'BINARY_ACK',\n  'ERROR'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n},{\"./binary\":42,\"./is-buffer\":44,\"component-emitter\":7,\"debug\":9,\"isarray\":29,\"json3\":30}],44:[function(require,module,exports){\n(function (global){\n\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],45:[function(require,module,exports){\nmodule.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n},{}],46:[function(require,module,exports){\n(function (global){\n/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],47:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar global = (function() { return this; })();\n\n/**\n * WebSocket constructor.\n */\n\nvar WebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WebSocket ? ws : null;\n\n/**\n * WebSocket constructor.\n *\n * The third `opts` options object gets ignored in web browsers, since it's\n * non-standard, and throws a TypeError if passed to the constructor.\n * See: https://github.com/einaros/ws/issues/227\n *\n * @param {String} uri\n * @param {Array} protocols (optional)\n * @param {Object) opts (optional)\n * @api public\n */\n\nfunction ws(uri, protocols, opts) {\n  var instance;\n  if (protocols) {\n    instance = new WebSocket(uri, protocols);\n  } else {\n    instance = new WebSocket(uri);\n  }\n  return instance;\n}\n\nif (WebSocket) ws.prototype = WebSocket.prototype;\n\n},{}],48:[function(require,module,exports){\n(function (global){\n/* global Y, global */\n'use strict';\n\n// socket.io requires utf8. This package checks if it is required by requirejs.\n// If window.require is set, then it will define itself as a module. This is erratic behavior and\n// results in socket.io having a \"bad request\".\n// This is why we undefine global.define (it is set by requirejs) before we require socket.io-client.\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar define = global.define;\nglobal.define = null;\nvar io = require('socket.io-client');\n// redefine global.define\nglobal.define = define;\n\nfunction extend(Y) {\n  var Connector = (function (_Y$AbstractConnector) {\n    _inherits(Connector, _Y$AbstractConnector);\n\n    function Connector(y, options) {\n      _classCallCheck(this, Connector);\n\n      if (options === undefined) {\n        throw new Error('Options must not be undefined!');\n      }\n      if (options.room == null) {\n        throw new Error('You must define a room name!');\n      }\n      options.role = 'slave';\n\n      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Connector).call(this, y, options));\n\n      _this.options = options;\n      options.url = options.url || 'https://yjs.dbis.rwth-aachen.de:5074';\n      var socket = io(options.url);\n      _this.socket = socket;\n      var self = _this;\n\n      _this._onConnect = function joinRoom() {\n        socket.emit('joinRoom', options.room);\n        self.userJoined('server', 'master');\n      };\n\n      socket.on('connect', _this._onConnect);\n      if (socket.connected) {\n        _this._onConnect();\n      } else {\n        socket.connect();\n      }\n\n      _this._onYjsEvent = function (message) {\n        if (message.type != null) {\n          if (message.type === 'sync done') {\n            self.setUserId(socket.id);\n          }\n          if (message.room === options.room) {\n            self.receiveMessage('server', message);\n          }\n        }\n      };\n      socket.on('yjsEvent', _this._onYjsEvent);\n\n      _this._onDisconnect = function (peer) {\n        self.userLeft('server');\n      };\n      socket.on('disconnect', _this._onDisconnect);\n      return _this;\n    }\n\n    _createClass(Connector, [{\n      key: 'disconnect',\n      value: function disconnect() {\n        this.socket.emit('leaveRoom', this.options.room);\n        this.socket.disconnect();\n        _get(Object.getPrototypeOf(Connector.prototype), 'disconnect', this).call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.disconnect();\n        this.socket.off('disconnect', this._onDisconnect);\n        this.socket.off('yjsEvent', this._onYjsEvent);\n        this.socket.off('connect', this._onConnect);\n        this.socket.destroy();\n        this.socket = null;\n      }\n    }, {\n      key: 'reconnect',\n      value: function reconnect() {\n        this.socket.connect();\n        _get(Object.getPrototypeOf(Connector.prototype), 'reconnect', this).call(this);\n      }\n    }, {\n      key: 'send',\n      value: function send(uid, message) {\n        message.room = this.options.room;\n        this.socket.emit('yjsEvent', message);\n      }\n    }, {\n      key: 'broadcast',\n      value: function broadcast(message) {\n        message.room = this.options.room;\n        this.socket.emit('yjsEvent', message);\n      }\n    }, {\n      key: 'isDisconnected',\n      value: function isDisconnected() {\n        return this.socket.disconnected;\n      }\n    }]);\n\n    return Connector;\n  })(Y.AbstractConnector);\n\n  Y.extend('websockets-client', Connector);\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"socket.io-client\":36}]},{},[48])\n\n",
    "/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n",
    "\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n",
    "/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n",
    "/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n",
    "/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n",
    "\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n",
    "\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};",
    "\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\ntry {\n  if (window.localStorage) debug.enable(localStorage.debug);\n} catch(e){}\n",
    "\nmodule.exports =  require('./lib/');\n",
    "\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n",
    "/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.host = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.host) {\n    var pieces = opts.host.split(':');\n    opts.hostname = pieces.shift();\n    if (pieces.length) {\n      opts.port = pieces.pop();\n    } else if (!opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? '443' : '80';\n    }\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.callbackBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized || null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 == this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  var transport;\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.emit('error', err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api public\n*/\n\nSocket.prototype.ping = function () {\n  this.sendPacket('ping');\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  for (var i = 0; i < this.prevBufferLen; i++) {\n    if (this.callbackBuffer[i]) {\n      this.callbackBuffer[i]();\n    }\n  }\n\n  this.writeBuffer.splice(0, this.prevBufferLen);\n  this.callbackBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (this.writeBuffer.length == 0) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, fn) {\n  this.sendPacket('message', msg, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, fn) {\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  var packet = { type: type, data: data };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  this.callbackBuffer.push(fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    function close() {\n      self.onClose('forced close');\n      debug('socket closing - telling transport to close');\n      self.transport.close();\n    }\n\n    function cleanupAndClose() {\n      self.removeListener('upgrade', cleanupAndClose);\n      self.removeListener('upgradeError', cleanupAndClose);\n      close();\n    }\n\n    function waitForUpgrade() {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      self.once('upgrade', cleanupAndClose);\n      self.once('upgradeError', cleanupAndClose);\n    }\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // clean buffers in next tick, so developers can still\n    // grab the buffers on `close` event\n    setTimeout(function() {\n      self.writeBuffer = [];\n      self.callbackBuffer = [];\n      self.prevBufferLen = 0;\n    }, 0);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n",
    "/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * A counter used to prevent collisions in the timestamps used\n * for cache busting.\n */\n\nTransport.timestamps = 0;\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n",
    "/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n",
    "\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  insertAt.parentNode.insertBefore(script, insertAt);\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n",
    "/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        data = 'ok';\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n",
    "/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = require('xmlhttprequest');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = +new Date + '-' + Transport.timestamps++;\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  return schema + '://' + this.hostname + port + this.path + query;\n};\n",
    "/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:websocket');\n\n/**\n * `ws` exposes a WebSocket-compatible interface in\n * Node, or the `WebSocket` or `MozWebSocket` globals\n * in the browser.\n */\n\nvar WebSocket = require('ws');\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = { agent: this.agent };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  this.ws = new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  this.ws.binaryType = 'arraybuffer';\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  for (var i = 0, l = packets.length; i < l; i++) {\n    parser.encodePacket(packets[i], this.supportsBinary, function(data) {\n      //Sometimes the websocket has already been closed but the browser didn't\n      //have a chance of informing us about it yet, in that case send will\n      //throw an error\n      try {\n        self.ws.send(data);\n      } catch (e){\n        debug('websocket closed before onclose event');\n      }\n    });\n  }\n\n  function ondrain() {\n    self.writable = true;\n    self.emit('drain');\n  }\n  // fake drain\n  // defer to next tick to allow Socket to clear writeBuffer\n  setTimeout(ondrain, 0);\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = +new Date;\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  return schema + '://' + this.hostname + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n",
    "// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n",
    "\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // This hackery is required for IE8,\n  // where the `console.log` function doesn't have 'apply'\n  return 'object' == typeof console\n    && 'function' == typeof console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      localStorage.removeItem('debug');\n    } else {\n      localStorage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = localStorage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n",
    "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n",
    "/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n",
    "/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar base64encoder = require('base64-arraybuffer');\nvar after = require('after');\nvar utf8 = require('utf8');\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n",
    "\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n",
    "\n/**\n * Returns `this`. Execute this without a \"context\" (i.e. without it being\n * attached to an object of the left-hand side), and `this` points to the\n * \"global\" scope of the current JS execution.\n */\n\nmodule.exports = (function () { return this; })();\n",
    "\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n",
    "\n/**\n * Module dependencies.\n */\n\nvar global = require('global');\n\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = 'XMLHttpRequest' in global &&\n    'withCredentials' in new global.XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n",
    "\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};",
    "module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n",
    "/*! JSON v3.2.6 | http://bestiejs.github.io/json3 | Copyright 2012-2013, Kit Cambridge | http://kit.mit-license.org */\n;(function (window) {\n  // Convenience aliases.\n  var getClass = {}.toString, isProperty, forEach, undef;\n\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // Detect native implementations.\n  var nativeJSON = typeof JSON == \"object\" && JSON;\n\n  // Set up the JSON 3 namespace, preferring the CommonJS `exports` object if\n  // available.\n  var JSON3 = typeof exports == \"object\" && exports && !exports.nodeType && exports;\n\n  if (JSON3 && nativeJSON) {\n    // Explicitly delegate to the native `stringify` and `parse`\n    // implementations in CommonJS environments.\n    JSON3.stringify = nativeJSON.stringify;\n    JSON3.parse = nativeJSON.parse;\n  } else {\n    // Export for web browsers, JavaScript engines, and asynchronous module\n    // loaders, using the global `JSON` object if available.\n    JSON3 = window.JSON = nativeJSON || {};\n  }\n\n  // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n  var isExtended = new Date(-3509827334573292);\n  try {\n    // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n    // results for certain dates in Opera >= 10.53.\n    isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n      // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n  } catch (exception) {}\n\n  // Internal: Determines whether the native `JSON.stringify` and `parse`\n  // implementations are spec-compliant. Based on work by Ken Snyder.\n  function has(name) {\n    if (has[name] !== undef) {\n      // Return cached feature test result.\n      return has[name];\n    }\n\n    var isSupported;\n    if (name == \"bug-string-char-index\") {\n      // IE <= 7 doesn't support accessing string characters using square\n      // bracket notation. IE 8 only supports this for primitives.\n      isSupported = \"a\"[0] != \"a\";\n    } else if (name == \"json\") {\n      // Indicates whether both `JSON.stringify` and `JSON.parse` are\n      // supported.\n      isSupported = has(\"json-stringify\") && has(\"json-parse\");\n    } else {\n      var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n      // Test `JSON.stringify`.\n      if (name == \"json-stringify\") {\n        var stringify = JSON3.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n        if (stringifySupported) {\n          // A test function object with a custom `toJSON` method.\n          (value = function () {\n            return 1;\n          }).toJSON = value;\n          try {\n            stringifySupported =\n              // Firefox 3.1b1 and b2 serialize string, number, and boolean\n              // primitives as object literals.\n              stringify(0) === \"0\" &&\n              // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n              // literals.\n              stringify(new Number()) === \"0\" &&\n              stringify(new String()) == '\"\"' &&\n              // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n              // does not define a canonical JSON representation (this applies to\n              // objects with `toJSON` properties as well, *unless* they are nested\n              // within an object or array).\n              stringify(getClass) === undef &&\n              // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n              // FF 3.1b3 pass this test.\n              stringify(undef) === undef &&\n              // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n              // respectively, if the value is omitted entirely.\n              stringify() === undef &&\n              // FF 3.1b1, 2 throw an error if the given value is not a number,\n              // string, array, object, Boolean, or `null` literal. This applies to\n              // objects with custom `toJSON` methods as well, unless they are nested\n              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n              // methods entirely.\n              stringify(value) === \"1\" &&\n              stringify([value]) == \"[1]\" &&\n              // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n              // `\"[null]\"`.\n              stringify([undef]) == \"[null]\" &&\n              // YUI 3.0.0b1 fails to serialize `null` literals.\n              stringify(null) == \"null\" &&\n              // FF 3.1b1, 2 halts serialization if an array contains a function:\n              // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n              // elides non-JSON values from objects and arrays, unless they\n              // define custom `toJSON` methods.\n              stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n              // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n              // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n              stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n              // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n              stringify(null, value) === \"1\" &&\n              stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n              // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n              // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n              // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n              // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n          } catch (exception) {\n            stringifySupported = false;\n          }\n        }\n        isSupported = stringifySupported;\n      }\n      // Test `JSON.parse`.\n      if (name == \"json-parse\") {\n        var parse = JSON3.parse;\n        if (typeof parse == \"function\") {\n          try {\n            // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n            // Conforming implementations should also coerce the initial argument to\n            // a string prior to parsing.\n            if (parse(\"0\") === 0 && !parse(false)) {\n              // Simple parsing test.\n              value = parse(serialized);\n              var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n              if (parseSupported) {\n                try {\n                  // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                  parseSupported = !parse('\"\\t\"');\n                } catch (exception) {}\n                if (parseSupported) {\n                  try {\n                    // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                    // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                    // certain octal literals.\n                    parseSupported = parse(\"01\") !== 1;\n                  } catch (exception) {}\n                }\n                if (parseSupported) {\n                  try {\n                    // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                    // points. These environments, along with FF 3.1b1 and 2,\n                    // also allow trailing commas in JSON objects and arrays.\n                    parseSupported = parse(\"1.\") !== 1;\n                  } catch (exception) {}\n                }\n              }\n            }\n          } catch (exception) {\n            parseSupported = false;\n          }\n        }\n        isSupported = parseSupported;\n      }\n    }\n    return has[name] = !!isSupported;\n  }\n\n  if (!has(\"json\")) {\n    // Common `[[Class]]` name aliases.\n    var functionClass = \"[object Function]\";\n    var dateClass = \"[object Date]\";\n    var numberClass = \"[object Number]\";\n    var stringClass = \"[object String]\";\n    var arrayClass = \"[object Array]\";\n    var booleanClass = \"[object Boolean]\";\n\n    // Detect incomplete support for accessing string characters by index.\n    var charIndexBuggy = has(\"bug-string-char-index\");\n\n    // Define additional utility methods if the `Date` methods are buggy.\n    if (!isExtended) {\n      var floor = Math.floor;\n      // A mapping between the months of the year and the number of days between\n      // January 1st and the first of the respective month.\n      var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n      // Internal: Calculates the number of days between the Unix epoch and the\n      // first day of the given month.\n      var getDay = function (year, month) {\n        return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n      };\n    }\n\n    // Internal: Determines if a property is a direct property of the given\n    // object. Delegates to the native `Object#hasOwnProperty` method.\n    if (!(isProperty = {}.hasOwnProperty)) {\n      isProperty = function (property) {\n        var members = {}, constructor;\n        if ((members.__proto__ = null, members.__proto__ = {\n          // The *proto* property cannot be set multiple times in recent\n          // versions of Firefox and SeaMonkey.\n          \"toString\": 1\n        }, members).toString != getClass) {\n          // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n          // supports the mutable *proto* property.\n          isProperty = function (property) {\n            // Capture and break the object's prototype chain (see section 8.6.2\n            // of the ES 5.1 spec). The parenthesized expression prevents an\n            // unsafe transformation by the Closure Compiler.\n            var original = this.__proto__, result = property in (this.__proto__ = null, this);\n            // Restore the original prototype chain.\n            this.__proto__ = original;\n            return result;\n          };\n        } else {\n          // Capture a reference to the top-level `Object` constructor.\n          constructor = members.constructor;\n          // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n          // other environments.\n          isProperty = function (property) {\n            var parent = (this.constructor || constructor).prototype;\n            return property in this && !(property in parent && this[property] === parent[property]);\n          };\n        }\n        members = null;\n        return isProperty.call(this, property);\n      };\n    }\n\n    // Internal: A set of primitive types used by `isHostType`.\n    var PrimitiveTypes = {\n      'boolean': 1,\n      'number': 1,\n      'string': 1,\n      'undefined': 1\n    };\n\n    // Internal: Determines if the given object `property` value is a\n    // non-primitive.\n    var isHostType = function (object, property) {\n      var type = typeof object[property];\n      return type == 'object' ? !!object[property] : !PrimitiveTypes[type];\n    };\n\n    // Internal: Normalizes the `for...in` iteration algorithm across\n    // environments. Each enumerated key is yielded to a `callback` function.\n    forEach = function (object, callback) {\n      var size = 0, Properties, members, property;\n\n      // Tests for bugs in the current environment's `for...in` algorithm. The\n      // `valueOf` property inherits the non-enumerable flag from\n      // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n      (Properties = function () {\n        this.valueOf = 0;\n      }).prototype.valueOf = 0;\n\n      // Iterate over a new instance of the `Properties` class.\n      members = new Properties();\n      for (property in members) {\n        // Ignore all properties inherited from `Object.prototype`.\n        if (isProperty.call(members, property)) {\n          size++;\n        }\n      }\n      Properties = members = null;\n\n      // Normalize the iteration algorithm.\n      if (!size) {\n        // A list of non-enumerable properties inherited from `Object.prototype`.\n        members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n        // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n        // properties.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, length;\n          var hasProperty = !isFunction && typeof object.constructor != 'function' && isHostType(object, 'hasOwnProperty') ? object.hasOwnProperty : isProperty;\n          for (property in object) {\n            // Gecko <= 1.0 enumerates the `prototype` property of functions under\n            // certain conditions; IE does not.\n            if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for each non-enumerable property.\n          for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n        };\n      } else if (size == 2) {\n        // Safari <= 2.0.4 enumerates shadowed properties twice.\n        forEach = function (object, callback) {\n          // Create a set of iterated properties.\n          var members = {}, isFunction = getClass.call(object) == functionClass, property;\n          for (property in object) {\n            // Store each property name to prevent double enumeration. The\n            // `prototype` property of functions is not enumerated due to cross-\n            // environment inconsistencies.\n            if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n        };\n      } else {\n        // No bugs detected; use the standard `for...in` algorithm.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n          for (property in object) {\n            if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for the `constructor` property due to\n          // cross-environment inconsistencies.\n          if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n            callback(property);\n          }\n        };\n      }\n      return forEach(object, callback);\n    };\n\n    // Public: Serializes a JavaScript `value` as a JSON string. The optional\n    // `filter` argument may specify either a function that alters how object and\n    // array members are serialized, or an array of strings and numbers that\n    // indicates which properties should be serialized. The optional `width`\n    // argument may be either a string or number that specifies the indentation\n    // level of the output.\n    if (!has(\"json-stringify\")) {\n      // Internal: A map of control characters and their escaped equivalents.\n      var Escapes = {\n        92: \"\\\\\\\\\",\n        34: '\\\\\"',\n        8: \"\\\\b\",\n        12: \"\\\\f\",\n        10: \"\\\\n\",\n        13: \"\\\\r\",\n        9: \"\\\\t\"\n      };\n\n      // Internal: Converts `value` into a zero-padded string such that its\n      // length is at least equal to `width`. The `width` must be <= 6.\n      var leadingZeroes = \"000000\";\n      var toPaddedString = function (width, value) {\n        // The `|| 0` expression is necessary to work around a bug in\n        // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n        return (leadingZeroes + (value || 0)).slice(-width);\n      };\n\n      // Internal: Double-quotes a string `value`, replacing all ASCII control\n      // characters (characters with code unit values between 0 and 31) with\n      // their escaped equivalents. This is an implementation of the\n      // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n      var unicodePrefix = \"\\\\u00\";\n      var quote = function (value) {\n        var result = '\"', index = 0, length = value.length, isLarge = length > 10 && charIndexBuggy, symbols;\n        if (isLarge) {\n          symbols = value.split(\"\");\n        }\n        for (; index < length; index++) {\n          var charCode = value.charCodeAt(index);\n          // If the character is a control character, append its Unicode or\n          // shorthand escape sequence; otherwise, append the character as-is.\n          switch (charCode) {\n            case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n              result += Escapes[charCode];\n              break;\n            default:\n              if (charCode < 32) {\n                result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                break;\n              }\n              result += isLarge ? symbols[index] : charIndexBuggy ? value.charAt(index) : value[index];\n          }\n        }\n        return result + '\"';\n      };\n\n      // Internal: Recursively serializes an object. Implements the\n      // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n      var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n        var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n        try {\n          // Necessary for host object support.\n          value = object[property];\n        } catch (exception) {}\n        if (typeof value == \"object\" && value) {\n          className = getClass.call(value);\n          if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n            if (value > -1 / 0 && value < 1 / 0) {\n              // Dates are serialized according to the `Date#toJSON` method\n              // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n              // for the ISO 8601 date time string format.\n              if (getDay) {\n                // Manually compute the year, month, date, hours, minutes,\n                // seconds, and milliseconds if the `getUTC*` methods are\n                // buggy. Adapted from @Yaffle's `date-shim` project.\n                date = floor(value / 864e5);\n                for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                date = 1 + date - getDay(year, month);\n                // The `time` value specifies the time within the day (see ES\n                // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                // to compute `A modulo B`, as the `%` operator does not\n                // correspond to the `modulo` operation for negative numbers.\n                time = (value % 864e5 + 864e5) % 864e5;\n                // The hours, minutes, seconds, and milliseconds are obtained by\n                // decomposing the time within the day. See section 15.9.1.10.\n                hours = floor(time / 36e5) % 24;\n                minutes = floor(time / 6e4) % 60;\n                seconds = floor(time / 1e3) % 60;\n                milliseconds = time % 1e3;\n              } else {\n                year = value.getUTCFullYear();\n                month = value.getUTCMonth();\n                date = value.getUTCDate();\n                hours = value.getUTCHours();\n                minutes = value.getUTCMinutes();\n                seconds = value.getUTCSeconds();\n                milliseconds = value.getUTCMilliseconds();\n              }\n              // Serialize extended years correctly.\n              value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                // Months, dates, hours, minutes, and seconds should have two\n                // digits; milliseconds should have three.\n                \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                // Milliseconds are optional in ES 5.0, but required in 5.1.\n                \".\" + toPaddedString(3, milliseconds) + \"Z\";\n            } else {\n              value = null;\n            }\n          } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n            // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n            // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n            // ignores all `toJSON` methods on these objects unless they are\n            // defined directly on an instance.\n            value = value.toJSON(property);\n          }\n        }\n        if (callback) {\n          // If a replacement function was provided, call it to obtain the value\n          // for serialization.\n          value = callback.call(object, property, value);\n        }\n        if (value === null) {\n          return \"null\";\n        }\n        className = getClass.call(value);\n        if (className == booleanClass) {\n          // Booleans are represented literally.\n          return \"\" + value;\n        } else if (className == numberClass) {\n          // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n          // `\"null\"`.\n          return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n        } else if (className == stringClass) {\n          // Strings are double-quoted and escaped.\n          return quote(\"\" + value);\n        }\n        // Recursively serialize objects and arrays.\n        if (typeof value == \"object\") {\n          // Check for cyclic structures. This is a linear search; performance\n          // is inversely proportional to the number of unique nested objects.\n          for (length = stack.length; length--;) {\n            if (stack[length] === value) {\n              // Cyclic structures cannot be serialized by `JSON.stringify`.\n              throw TypeError();\n            }\n          }\n          // Add the object to the stack of traversed objects.\n          stack.push(value);\n          results = [];\n          // Save the current indentation level and indent one additional level.\n          prefix = indentation;\n          indentation += whitespace;\n          if (className == arrayClass) {\n            // Recursively serialize array elements.\n            for (index = 0, length = value.length; index < length; index++) {\n              element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n              results.push(element === undef ? \"null\" : element);\n            }\n            result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n          } else {\n            // Recursively serialize object members. Members are selected from\n            // either a user-specified list of property names, or the object\n            // itself.\n            forEach(properties || value, function (property) {\n              var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n              if (element !== undef) {\n                // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                // is not the empty string, let `member` {quote(property) + \":\"}\n                // be the concatenation of `member` and the `space` character.\"\n                // The \"`space` character\" refers to the literal space\n                // character, not the `space` {width} argument provided to\n                // `JSON.stringify`.\n                results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n              }\n            });\n            result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n          }\n          // Remove the object from the traversed object stack.\n          stack.pop();\n          return result;\n        }\n      };\n\n      // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n      JSON3.stringify = function (source, filter, width) {\n        var whitespace, callback, properties, className;\n        if (typeof filter == \"function\" || typeof filter == \"object\" && filter) {\n          if ((className = getClass.call(filter)) == functionClass) {\n            callback = filter;\n          } else if (className == arrayClass) {\n            // Convert the property names array into a makeshift set.\n            properties = {};\n            for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n          }\n        }\n        if (width) {\n          if ((className = getClass.call(width)) == numberClass) {\n            // Convert the `width` to an integer and create a string containing\n            // `width` number of space characters.\n            if ((width -= width % 1) > 0) {\n              for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n            }\n          } else if (className == stringClass) {\n            whitespace = width.length <= 10 ? width : width.slice(0, 10);\n          }\n        }\n        // Opera <= 7.54u2 discards the values associated with empty string keys\n        // (`\"\"`) only if they are used directly within an object member list\n        // (e.g., `!(\"\" in { \"\": 1})`).\n        return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n      };\n    }\n\n    // Public: Parses a JSON source string.\n    if (!has(\"json-parse\")) {\n      var fromCharCode = String.fromCharCode;\n\n      // Internal: A map of escaped control characters and their unescaped\n      // equivalents.\n      var Unescapes = {\n        92: \"\\\\\",\n        34: '\"',\n        47: \"/\",\n        98: \"\\b\",\n        116: \"\\t\",\n        110: \"\\n\",\n        102: \"\\f\",\n        114: \"\\r\"\n      };\n\n      // Internal: Stores the parser state.\n      var Index, Source;\n\n      // Internal: Resets the parser state and throws a `SyntaxError`.\n      var abort = function() {\n        Index = Source = null;\n        throw SyntaxError();\n      };\n\n      // Internal: Returns the next token, or `\"$\"` if the parser has reached\n      // the end of the source string. A token may be a string, number, `null`\n      // literal, or Boolean literal.\n      var lex = function () {\n        var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n        while (Index < length) {\n          charCode = source.charCodeAt(Index);\n          switch (charCode) {\n            case 9: case 10: case 13: case 32:\n              // Skip whitespace tokens, including tabs, carriage returns, line\n              // feeds, and space characters.\n              Index++;\n              break;\n            case 123: case 125: case 91: case 93: case 58: case 44:\n              // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n              // the current position.\n              value = charIndexBuggy ? source.charAt(Index) : source[Index];\n              Index++;\n              return value;\n            case 34:\n              // `\"` delimits a JSON string; advance to the next character and\n              // begin parsing the string. String tokens are prefixed with the\n              // sentinel `@` character to distinguish them from punctuators and\n              // end-of-string tokens.\n              for (value = \"@\", Index++; Index < length;) {\n                charCode = source.charCodeAt(Index);\n                if (charCode < 32) {\n                  // Unescaped ASCII control characters (those with a code unit\n                  // less than the space character) are not permitted.\n                  abort();\n                } else if (charCode == 92) {\n                  // A reverse solidus (`\\`) marks the beginning of an escaped\n                  // control character (including `\"`, `\\`, and `/`) or Unicode\n                  // escape sequence.\n                  charCode = source.charCodeAt(++Index);\n                  switch (charCode) {\n                    case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                      // Revive escaped control characters.\n                      value += Unescapes[charCode];\n                      Index++;\n                      break;\n                    case 117:\n                      // `\\u` marks the beginning of a Unicode escape sequence.\n                      // Advance to the first character and validate the\n                      // four-digit code point.\n                      begin = ++Index;\n                      for (position = Index + 4; Index < position; Index++) {\n                        charCode = source.charCodeAt(Index);\n                        // A valid sequence comprises four hexdigits (case-\n                        // insensitive) that form a single hexadecimal value.\n                        if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                          // Invalid Unicode escape sequence.\n                          abort();\n                        }\n                      }\n                      // Revive the escaped character.\n                      value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                      break;\n                    default:\n                      // Invalid escape sequence.\n                      abort();\n                  }\n                } else {\n                  if (charCode == 34) {\n                    // An unescaped double-quote character marks the end of the\n                    // string.\n                    break;\n                  }\n                  charCode = source.charCodeAt(Index);\n                  begin = Index;\n                  // Optimize for the common case where a string is valid.\n                  while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                    charCode = source.charCodeAt(++Index);\n                  }\n                  // Append the string as-is.\n                  value += source.slice(begin, Index);\n                }\n              }\n              if (source.charCodeAt(Index) == 34) {\n                // Advance to the next character and return the revived string.\n                Index++;\n                return value;\n              }\n              // Unterminated string.\n              abort();\n            default:\n              // Parse numbers and literals.\n              begin = Index;\n              // Advance past the negative sign, if one is specified.\n              if (charCode == 45) {\n                isSigned = true;\n                charCode = source.charCodeAt(++Index);\n              }\n              // Parse an integer or floating-point value.\n              if (charCode >= 48 && charCode <= 57) {\n                // Leading zeroes are interpreted as octal literals.\n                if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                  // Illegal octal literal.\n                  abort();\n                }\n                isSigned = false;\n                // Parse the integer component.\n                for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                // Floats cannot contain a leading decimal point; however, this\n                // case is already accounted for by the parser.\n                if (source.charCodeAt(Index) == 46) {\n                  position = ++Index;\n                  // Parse the decimal component.\n                  for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal trailing decimal.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Parse exponents. The `e` denoting the exponent is\n                // case-insensitive.\n                charCode = source.charCodeAt(Index);\n                if (charCode == 101 || charCode == 69) {\n                  charCode = source.charCodeAt(++Index);\n                  // Skip past the sign following the exponent, if one is\n                  // specified.\n                  if (charCode == 43 || charCode == 45) {\n                    Index++;\n                  }\n                  // Parse the exponential component.\n                  for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal empty exponent.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Coerce the parsed value to a JavaScript number.\n                return +source.slice(begin, Index);\n              }\n              // A negative sign may only precede numbers.\n              if (isSigned) {\n                abort();\n              }\n              // `true`, `false`, and `null` literals.\n              if (source.slice(Index, Index + 4) == \"true\") {\n                Index += 4;\n                return true;\n              } else if (source.slice(Index, Index + 5) == \"false\") {\n                Index += 5;\n                return false;\n              } else if (source.slice(Index, Index + 4) == \"null\") {\n                Index += 4;\n                return null;\n              }\n              // Unrecognized token.\n              abort();\n          }\n        }\n        // Return the sentinel `$` character if the parser has reached the end\n        // of the source string.\n        return \"$\";\n      };\n\n      // Internal: Parses a JSON `value` token.\n      var get = function (value) {\n        var results, hasMembers;\n        if (value == \"$\") {\n          // Unexpected end of input.\n          abort();\n        }\n        if (typeof value == \"string\") {\n          if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n            // Remove the sentinel `@` character.\n            return value.slice(1);\n          }\n          // Parse object and array literals.\n          if (value == \"[\") {\n            // Parses a JSON array, returning a new JavaScript array.\n            results = [];\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing square bracket marks the end of the array literal.\n              if (value == \"]\") {\n                break;\n              }\n              // If the array literal contains elements, the current token\n              // should be a comma separating the previous element from the\n              // next.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"]\") {\n                    // Unexpected trailing `,` in array literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each array element.\n                  abort();\n                }\n              }\n              // Elisions and leading commas are not permitted.\n              if (value == \",\") {\n                abort();\n              }\n              results.push(get(value));\n            }\n            return results;\n          } else if (value == \"{\") {\n            // Parses a JSON object, returning a new JavaScript object.\n            results = {};\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing curly brace marks the end of the object literal.\n              if (value == \"}\") {\n                break;\n              }\n              // If the object literal contains members, the current token\n              // should be a comma separator.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"}\") {\n                    // Unexpected trailing `,` in object literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each object member.\n                  abort();\n                }\n              }\n              // Leading commas are not permitted, object property names must be\n              // double-quoted strings, and a `:` must separate each property\n              // name and value.\n              if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                abort();\n              }\n              results[value.slice(1)] = get(lex());\n            }\n            return results;\n          }\n          // Unexpected token encountered.\n          abort();\n        }\n        return value;\n      };\n\n      // Internal: Updates a traversed object member.\n      var update = function(source, property, callback) {\n        var element = walk(source, property, callback);\n        if (element === undef) {\n          delete source[property];\n        } else {\n          source[property] = element;\n        }\n      };\n\n      // Internal: Recursively traverses a parsed JSON object, invoking the\n      // `callback` function for each value. This is an implementation of the\n      // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n      var walk = function (source, property, callback) {\n        var value = source[property], length;\n        if (typeof value == \"object\" && value) {\n          // `forEach` can't be used to traverse an array in Opera <= 8.54\n          // because its `Object#hasOwnProperty` implementation returns `false`\n          // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n          if (getClass.call(value) == arrayClass) {\n            for (length = value.length; length--;) {\n              update(value, length, callback);\n            }\n          } else {\n            forEach(value, function (property) {\n              update(value, property, callback);\n            });\n          }\n        }\n        return callback.call(source, property, value);\n      };\n\n      // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n      JSON3.parse = function (source, callback) {\n        var result, value;\n        Index = 0;\n        Source = \"\" + source;\n        result = get(lex());\n        // If a JSON string contains multiple tokens, it is invalid.\n        if (lex() != \"$\") {\n          abort();\n        }\n        // Reset the parser state.\n        Index = Source = null;\n        return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n      };\n    }\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}(this));\n",
    "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  var match = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n",
    "\n/**\n * HOP ref.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return own keys in `obj`.\n *\n * @param {Object} obj\n * @return {Array}\n * @api public\n */\n\nexports.keys = Object.keys || function(obj){\n  var keys = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n/**\n * Return own values in `obj`.\n *\n * @param {Object} obj\n * @return {Array}\n * @api public\n */\n\nexports.values = function(obj){\n  var vals = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      vals.push(obj[key]);\n    }\n  }\n  return vals;\n};\n\n/**\n * Merge `b` into `a`.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api public\n */\n\nexports.merge = function(a, b){\n  for (var key in b) {\n    if (has.call(b, key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\n/**\n * Return length of `obj`.\n *\n * @param {Object} obj\n * @return {Number}\n * @api public\n */\n\nexports.length = function(obj){\n  return exports.keys(obj).length;\n};\n\n/**\n * Check if `obj` is empty.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api public\n */\n\nexports.isEmpty = function(obj){\n  return 0 == exports.length(obj);\n};",
    "/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};",
    "/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n",
    "/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host'\n  , 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n  var m = re.exec(str || '')\n    , uri = {}\n    , i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  return uri;\n};\n",
    "\nmodule.exports = require('./lib/');\n",
    "\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var io;\n\n  if (opts.forceNew || opts['force new connection'] || false === opts.multiplex) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n",
    "\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar object = require('object-component');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connected = [];\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].id = this.engine.id;\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n      if (!~indexOf(self.connected, socket)) {\n        self.connected.push(socket);\n      }\n    });\n  }\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connected, socket);\n  if (~index) this.connected.splice(index, 1);\n  if (this.connected.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i]);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  this.skipReconnect = true;\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.engine && this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('close');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n",
    "\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n",
    "\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  if (this.io.autoConnect) this.open();\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  debug('calling ack %s with %j', packet.id, packet.data);\n  var fn = this.acks[packet.id];\n  fn.apply(this, packet.data);\n  delete this.acks[packet.id];\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n",
    "\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.hostname + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  // define unique id\n  obj.id = obj.protocol + '://' + obj.host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + obj.host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n",
    "/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n",
    "\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar isArray = require('isarray');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'BINARY_EVENT',\n  'ACK',\n  'BINARY_ACK',\n  'ERROR'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n",
    "\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n",
    "module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n",
    "/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n",
    "\n/**\n * Module dependencies.\n */\n\nvar global = (function() { return this; })();\n\n/**\n * WebSocket constructor.\n */\n\nvar WebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WebSocket ? ws : null;\n\n/**\n * WebSocket constructor.\n *\n * The third `opts` options object gets ignored in web browsers, since it's\n * non-standard, and throws a TypeError if passed to the constructor.\n * See: https://github.com/einaros/ws/issues/227\n *\n * @param {String} uri\n * @param {Array} protocols (optional)\n * @param {Object) opts (optional)\n * @api public\n */\n\nfunction ws(uri, protocols, opts) {\n  var instance;\n  if (protocols) {\n    instance = new WebSocket(uri, protocols);\n  } else {\n    instance = new WebSocket(uri);\n  }\n  return instance;\n}\n\nif (WebSocket) ws.prototype = WebSocket.prototype;\n",
    "/* global Y, global */\n'use strict'\n\n// socket.io requires utf8. This package checks if it is required by requirejs.\n// If window.require is set, then it will define itself as a module. This is erratic behavior and\n// results in socket.io having a \"bad request\".\n// This is why we undefine global.define (it is set by requirejs) before we require socket.io-client.\nvar define = global.define\nglobal.define = null\nvar io = require('socket.io-client')\n// redefine global.define\nglobal.define = define\n\nfunction extend (Y) {\n  class Connector extends Y.AbstractConnector {\n    constructor (y, options) {\n      if (options === undefined) {\n        throw new Error('Options must not be undefined!')\n      }\n      if (options.room == null) {\n        throw new Error('You must define a room name!')\n      }\n      options.role = 'slave'\n      super(y, options)\n      this.options = options\n      options.url = options.url || 'https://yjs.dbis.rwth-aachen.de:5074'\n      var socket = io(options.url)\n      this.socket = socket\n      var self = this\n\n      this._onConnect = function joinRoom () {\n        socket.emit('joinRoom', options.room)\n        self.userJoined('server', 'master')\n      }\n\n      socket.on('connect', this._onConnect)\n      if (socket.connected) {\n        this._onConnect()\n      } else {\n        socket.connect()\n      }\n\n      this._onYjsEvent = function (message) {\n        if (message.type != null) {\n          if (message.type === 'sync done') {\n            self.setUserId(socket.id)\n          }\n          if (message.room === options.room) {\n            self.receiveMessage('server', message)\n          }\n        }\n      }\n      socket.on('yjsEvent', this._onYjsEvent)\n\n      this._onDisconnect = function (peer) {\n        self.userLeft('server')\n      }\n      socket.on('disconnect', this._onDisconnect)\n    }\n    disconnect () {\n      this.socket.emit('leaveRoom', this.options.room)\n      this.socket.disconnect()\n      super.disconnect()\n    }\n    destroy () {\n      this.disconnect()\n      this.socket.off('disconnect', this._onDisconnect)\n      this.socket.off('yjsEvent', this._onYjsEvent)\n      this.socket.off('connect', this._onConnect)\n      this.socket.destroy()\n      this.socket = null\n    }\n    reconnect () {\n      this.socket.connect()\n      super.reconnect()\n    }\n    send (uid, message) {\n      message.room = this.options.room\n      this.socket.emit('yjsEvent', message)\n    }\n    broadcast (message) {\n      message.room = this.options.room\n      this.socket.emit('yjsEvent', message)\n    }\n    isDisconnected () {\n      return this.socket.disconnected\n    }\n  }\n  Y.extend('websockets-client', Connector)\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"
  ],
  "sourceRoot": "/source/"
}